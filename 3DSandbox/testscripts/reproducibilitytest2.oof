OOF.Microstructure.Create_From_ImageFile(filename='/Users/vrc/OOF2/TEST3D/ms_data/5color/slice*.tif', microstructure_name='ms', height=automatic, width=automatic, depth=automatic)
OOF.Image.AutoGroup(image='ms:slice*.tif', name_template='%c')
OOF.Settings.UndoBuffer_Size.Skeleton(size=2)

global skeletoncontext
from ooflib.engine import skeletoncontext
 
def skelCompare(name):
    s1 = skeletoncontext.skeletonContexts["ms:skeleton"].getObject()
    # OOF.File.Save.Skeleton(filename="reprdc_test", mode="w", format="ascii", skeleton="ms:skeleton")
    OOF.File.Load.Data(filename=name)
    s2 = skeletoncontext.skeletonContexts["ms_r:skeleton_r"].getObject()
    status = s1.compare(s2, 1.0e-13)
    print "STATUS AFTER COMPARE:", status[1]
    assert(status[0] == True)
    OOF.Skeleton.Delete(skeleton="ms_r:skeleton_r")

from time import *
print "INITIAL", time()
OOF.Skeleton.New(name='skeleton', microstructure='ms', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate',left_right_periodicity=False,top_bottom_periodicity=False,front_back_periodicity=False))
skelCompare("skel1")
print "AFTER CREATION", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Refine(targets=CheckHomogeneity(threshold=1),criterion=Unconditionally(),alpha=0.7))
skelCompare("skel2")
print "AFTER REFINE 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Refine(targets=CheckHomogeneity(threshold=0.95),criterion=Unconditionally(),alpha=0.7))
skelCompare("skel3")
print "AFTER REFINE 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapHeterogenous(threshold=0.90000000000000002),criterion=Unconditional(alpha=0.90000000000000002)))
skelCompare("skel4")
print "AFTER SNAP 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapHeterogenous(threshold=0.90000000000000002),criterion=Unconditional(alpha=0.90000000000000002)))
skelCompare("skel5")
print "AFTER SNAP 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapHeterogenous(threshold=0.90000000000000002),criterion=Unconditional(alpha=0.90000000000000002)))
skelCompare("skel6")
print "AFTER SNAP 3", time()
OOF.Skeleton.PinNodes.Pin_Internal_Boundary_Nodes(skeleton='ms:skeleton')
print "AFTER PIN", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Smooth(targets=AllNodes(),criterion=AverageEnergy(alpha=0.29999999999999999),T=0.0,iteration=FixedIteration(iterations=5)))
skelCompare("skel7")
print "AFTER SMOOTH", time()
OOF.Skeleton.PinNodes.UnpinAll(skeleton='ms:skeleton')
print "AFTER UNPIN", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Rationalize(targets=BadlyShapedElements(threshold=0.90000000000000002),criterion=AverageEnergy(alpha=0.29999999999999999),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
skelCompare("skel8")
print "AFTER RATIONALIZE 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Rationalize(targets=BadlyShapedElements(threshold=0.80000000000000004),criterion=AverageEnergy(alpha=0.29999999999999999),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
skelCompare("skel9")
print "AFTER RATIONALIZE 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Rationalize(targets=BadlyShapedElements(threshold=0.80000000000000004),criterion=AverageEnergy(alpha=0.29999999999999999),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
skelCompare("skel10")
print "AFTER RATIONALIZE 3", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapRefine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),min_distance=1,alpha=0.7))
skelCompare("skel11")
print "AFTER SNAP REFINE", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapHeterogenous(threshold=0.90000000000000002),criterion=Unconditional(alpha=0.90000000000000002)))
skelCompare("skel12")
print "AFTER SNAP 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapHeterogenous(threshold=0.90000000000000002),criterion=Unconditional(alpha=0.90000000000000002)))
skelCompare("skel13")
print "AFTER SNAP 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapHeterogenous(threshold=0.90000000000000002),criterion=Unconditional(alpha=0.90000000000000002)))
skelCompare("skel14")
print "AFTER SNAP 3", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SurfaceSmooth(criterion=AverageEnergy(alpha=0.29999999999999999),T=0.0,gamma=0.4,iteration=FixedIteration(iterations=5)))
skelCompare("skel15")
print "AFTER SURFACE SMOOTH", time()


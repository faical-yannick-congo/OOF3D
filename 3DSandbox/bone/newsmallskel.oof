OOF.Microstructure.Create_From_ImageFile(filename='/Users/vrc/Desktop/bone/subsection/Bn_326_ROI_*.tiff', microstructure_name='ms', height=automatic, width=automatic, depth=automatic)
OOF.Image.AutoGroup(image='ms:Bn_326_ROI_*.tiff', name_template='%c')
OOF.Material.New(name='bone', material_type='bulk')
OOF.Material.Assign(material='bone', microstructure='ms', pixels='#000000')
OOF.Material.New(name='marrow', material_type='bulk')
OOF.Material.Assign(material='marrow', microstructure='ms', pixels='#ffffff')
OOF.Property.Copy(property='Color', new_name='instance')
OOF.Property.Parametrize.Color.instance(color=RGBColor(red=1.00000,green=0.68254,blue=0.61905))
OOF.Material.Add_property(name='marrow', property='Color:instance')
OOF.Property.Copy(property='Color', new_name='instance_2')
OOF.Property.Parametrize.Color.instance_2(color=Gray(value=1.0))
OOF.Material.Add_property(name='bone', property='Color:instance_2')
OOF.Settings.UndoBuffer_Size.Skeleton(size=2)

from time import *
print "INITIAL", time()
OOF.Skeleton.New(name='skeleton', microstructure='ms', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate',left_right_periodicity=False,top_bottom_periodicity=False,front_back_periodicity=False))
print "AFTER CREATION", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Refine(targets=CheckHeterogeneousEdges(threshold=1,choose_from=FromAllSegments()),criterion=Unconditionally(),alpha=0.7))
print "AFTER REFINE 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Refine(targets=CheckHeterogeneousEdges(threshold=0.95,choose_from=FromAllSegments()),criterion=Unconditionally(),alpha=0.7))
print "AFTER REFINE 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Refine(targets=CheckHeterogeneousEdges(threshold=0.95,choose_from=FromAllSegments()),criterion=Unconditionally(),alpha=0.7))
print "AFTER REFINE 3", time()

OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=Unconditional(alpha=0.90000000000000002)))
print "AFTER SNAP 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=Unconditional(alpha=0.90000000000000002)))
print "AFTER SNAP 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=Unconditional(alpha=0.90000000000000002)))
print "AFTER SNAP 3", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=Unconditional(alpha=0.90000000000000002)))
print "AFTER SNAP 4", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=Unconditional(alpha=0.90000000000000002)))
print "AFTER SNAP 5", time()
OOF.Skeleton.PinNodes.Pin_Internal_Boundary_Nodes(skeleton='ms:skeleton')
OOF.Skeleton.PinNodes.UnpinAll(skeleton='ms:skeleton')
print "AFTER PIN", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Smooth(targets=AllNodes(),criterion=AverageEnergy(alpha=0.29999999999999999),T=0.0,iteration=FixedIteration(iterations=5)))
print "AFTER SMOOTH", time()
OOF.Skeleton.PinNodes.UnpinAll(skeleton='ms:skeleton')
print "AFTER UNPIN", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Rationalize(targets=BadlyShapedElements(threshold=0.90000000000000002),criterion=AverageEnergy(alpha=0.29999999999999999),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
print "AFTER RATIONALIZE 1", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Rationalize(targets=BadlyShapedElements(threshold=0.80000000000000004),criterion=AverageEnergy(alpha=0.29999999999999999),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
print "AFTER RATIONALIZE 2", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=Rationalize(targets=BadlyShapedElements(threshold=0.80000000000000004),criterion=AverageEnergy(alpha=0.29999999999999999),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
print "AFTER RATIONALIZE 3", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SnapRefine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),min_distance=1,alpha=0.7))
print "AFTER SNAP REFINE", time()
OOF.Skeleton.Modify(skeleton='ms:skeleton', modifier=SurfaceSmooth(criterion=AverageEnergy(alpha=0.29999999999999999),T=0.0,gamma=0.4,iteration=FixedIteration(iterations=10)))
print "AFTER SURFACE SMOOTH", time()

# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='reference', size=Point(1,1), isize=iPoint(10,10))
Microstructure.PixelGroup(microstructure='reference', group='stripe', meshable=1)
Microstructure.PixelGroup(microstructure='reference', group='edges', meshable=1)
Microstructure.Categories(microstructure='reference', categories=[[0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=0, groups=['edges'])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=1, groups=['stripe'])
Property.Thermal.Conductivity.Isotropic(name='', kappa=1.0)
MaterialandType(name='material', properties=['Thermal:Conductivity:Isotropic'], materialtype='bulk')
Microstructure.DefineCategory.Material(microstructure='reference', category=0, material='material')
Microstructure.DefineCategory.Material(microstructure='reference', category=1, material='material')
Microstructure.EndCategories(microstructure='reference')
Skeleton.NewPeriodic(name='skeleton', microstructure='reference', left_right_periodicity=False, top_bottom_periodicity=False)
Skeleton.Nodes(skeleton='reference:skeleton', points=[(0.0, 0.0), (0.10000000000000001, 0.0), (0.20000000000000001, 0.0), (0.30000000000000004, 0.0), (0.40000000000000002, 0.0), (0.5, 0.0), (0.60000000000000009, 0.0), (0.70000000000000007, 0.0), (0.80000000000000004, 0.0), (0.90000000000000002, 0.0), (1.0, 0.0), (0.0, 0.10000000000000001), (0.10000000000000001, 0.10000000000000001), (0.20000000000000001, 0.10000000000000001), (0.30000000000000004, 0.10000000000000001), (0.40000000000000002, 0.10000000000000001), (0.5, 0.10000000000000001), (0.60000000000000009, 0.10000000000000001), (0.70000000000000007, 0.10000000000000001), (0.80000000000000004, 0.10000000000000001), (0.90000000000000002, 0.10000000000000001), (1.0, 0.10000000000000001), (0.0, 0.20000000000000001), (0.10000000000000001, 0.20000000000000001), (0.20000000000000001, 0.20000000000000001), (0.30000000000000004, 0.20000000000000001), (0.40000000000000002, 0.20000000000000001), (0.5, 0.20000000000000001), (0.60000000000000009, 0.20000000000000001), (0.70000000000000007, 0.20000000000000001), (0.80000000000000004, 0.20000000000000001), (0.90000000000000002, 0.20000000000000001), (1.0, 0.20000000000000001), (0.0, 0.30000000000000004), (0.10000000000000001, 0.30000000000000004), (0.20000000000000001, 0.30000000000000004), (0.30000000000000004, 0.30000000000000004), (0.40000000000000002, 0.30000000000000004), (0.5, 0.30000000000000004), (0.60000000000000009, 0.30000000000000004), (0.70000000000000007, 0.30000000000000004), (0.80000000000000004, 0.30000000000000004), (0.90000000000000002, 0.30000000000000004), (1.0, 0.30000000000000004), (0.0, 0.40000000000000002), (0.10000000000000001, 0.40000000000000002), (0.20000000000000001, 0.40000000000000002), (0.30000000000000004, 0.40000000000000002), (0.40000000000000002, 0.40000000000000002), (0.5, 0.40000000000000002), (0.60000000000000009, 0.40000000000000002), (0.70000000000000007, 0.40000000000000002), (0.80000000000000004, 0.40000000000000002), (0.90000000000000002, 0.40000000000000002), (1.0, 0.40000000000000002), (0.0, 0.5), (0.10000000000000001, 0.5), (0.20000000000000001, 0.5), (0.30000000000000004, 0.5), (0.40000000000000002, 0.5), (0.5, 0.5), (0.60000000000000009, 0.5), (0.70000000000000007, 0.5), (0.80000000000000004, 0.5), (0.90000000000000002, 0.5), (1.0, 0.5), (0.0, 0.60000000000000009), (0.10000000000000001, 0.60000000000000009), (0.20000000000000001, 0.60000000000000009), (0.30000000000000004, 0.60000000000000009), (0.40000000000000002, 0.60000000000000009), (0.5, 0.60000000000000009), (0.60000000000000009, 0.60000000000000009), (0.70000000000000007, 0.60000000000000009), (0.80000000000000004, 0.60000000000000009), (0.90000000000000002, 0.60000000000000009), (1.0, 0.60000000000000009), (0.0, 0.70000000000000007), (0.10000000000000001, 0.70000000000000007), (0.20000000000000001, 0.70000000000000007), (0.30000000000000004, 0.70000000000000007), (0.40000000000000002, 0.70000000000000007), (0.5, 0.70000000000000007), (0.60000000000000009, 0.70000000000000007), (0.70000000000000007, 0.70000000000000007), (0.80000000000000004, 0.70000000000000007), (0.90000000000000002, 0.70000000000000007), (1.0, 0.70000000000000007), (0.0, 0.80000000000000004), (0.10000000000000001, 0.80000000000000004), (0.20000000000000001, 0.80000000000000004), (0.30000000000000004, 0.80000000000000004), (0.40000000000000002, 0.80000000000000004), (0.5, 0.80000000000000004), (0.60000000000000009, 0.80000000000000004), (0.70000000000000007, 0.80000000000000004), (0.80000000000000004, 0.80000000000000004), (0.90000000000000002, 0.80000000000000004), (1.0, 0.80000000000000004), (0.0, 0.90000000000000002), (0.10000000000000001, 0.90000000000000002), (0.20000000000000001, 0.90000000000000002), (0.30000000000000004, 0.90000000000000002), (0.40000000000000002, 0.90000000000000002), (0.5, 0.90000000000000002), (0.60000000000000009, 0.90000000000000002), (0.70000000000000007, 0.90000000000000002), (0.80000000000000004, 0.90000000000000002), (0.90000000000000002, 0.90000000000000002), (1.0, 0.90000000000000002), (0.0, 1.0), (0.10000000000000001, 1.0), (0.20000000000000001, 1.0), (0.30000000000000004, 1.0), (0.40000000000000002, 1.0), (0.5, 1.0), (0.60000000000000009, 1.0), (0.70000000000000007, 1.0), (0.80000000000000004, 1.0), (0.90000000000000002, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='reference:skeleton', nodes=[(0, 1, 12, 11), (1, 2, 13, 12), (2, 3, 14, 13), (3, 4, 15, 14), (4, 5, 16, 15), (5, 6, 17, 16), (6, 7, 18, 17), (7, 8, 19, 18), (8, 9, 20, 19), (9, 10, 21, 20), (11, 12, 23, 22), (12, 13, 24, 23), (13, 14, 25, 24), (14, 15, 26, 25), (15, 16, 27, 26), (16, 17, 28, 27), (17, 18, 29, 28), (18, 19, 30, 29), (19, 20, 31, 30), (20, 21, 32, 31), (22, 23, 34, 33), (23, 24, 35, 34), (24, 25, 36, 35), (25, 26, 37, 36), (26, 27, 38, 37), (27, 28, 39, 38), (28, 29, 40, 39), (29, 30, 41, 40), (30, 31, 42, 41), (31, 32, 43, 42), (33, 34, 45, 44), (34, 35, 46, 45), (35, 36, 47, 46), (36, 37, 48, 47), (37, 38, 49, 48), (38, 39, 50, 49), (39, 40, 51, 50), (40, 41, 52, 51), (41, 42, 53, 52), (42, 43, 54, 53), (44, 45, 56, 55), (45, 46, 57, 56), (46, 47, 58, 57), (47, 48, 59, 58), (48, 49, 60, 59), (49, 50, 61, 60), (50, 51, 62, 61), (51, 52, 63, 62), (52, 53, 64, 63), (53, 54, 65, 64), (55, 56, 67, 66), (56, 57, 68, 67), (57, 58, 69, 68), (58, 59, 70, 69), (59, 60, 71, 70), (60, 61, 72, 71), (61, 62, 73, 72), (62, 63, 74, 73), (63, 64, 75, 74), (64, 65, 76, 75), (66, 67, 78, 77), (67, 68, 79, 78), (68, 69, 80, 79), (69, 70, 81, 80), (70, 71, 82, 81), (71, 72, 83, 82), (72, 73, 84, 83), (73, 74, 85, 84), (74, 75, 86, 85), (75, 76, 87, 86), (77, 78, 89, 88), (78, 79, 90, 89), (79, 80, 91, 90), (80, 81, 92, 91), (81, 82, 93, 92), (82, 83, 94, 93), (83, 84, 95, 94), (84, 85, 96, 95), (85, 86, 97, 96), (86, 87, 98, 97), (88, 89, 100, 99), (89, 90, 101, 100), (90, 91, 102, 101), (91, 92, 103, 102), (92, 93, 104, 103), (93, 94, 105, 104), (94, 95, 106, 105), (95, 96, 107, 106), (96, 97, 108, 107), (97, 98, 109, 108), (99, 100, 111, 110), (100, 101, 112, 111), (101, 102, 113, 112), (102, 103, 114, 113), (103, 104, 115, 114), (104, 105, 116, 115), (105, 106, 117, 116), (106, 107, 118, 117), (107, 108, 119, 118), (108, 109, 120, 119)])
Skeleton.PinnedNodes(skeleton='reference:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomright', nodes=[10], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='midtop', nodes=[114], exterior=0)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topleft', nodes=[110], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topright', nodes=[120], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='bottom', edges=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='left', edges=[(110, 99), (99, 88), (88, 77), (77, 66), (66, 55), (55, 44), (44, 33), (33, 22), (22, 11), (11, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='right', edges=[(10, 21), (21, 32), (32, 43), (43, 54), (54, 65), (65, 76), (76, 87), (87, 98), (98, 109), (109, 120)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='top', edges=[(120, 119), (119, 118), (118, 117), (117, 116), (116, 115), (115, 114), (114, 113), (113, 112), (112, 111), (111, 110)], exterior=1)
Mesh.New(name='mesh', masterelems=['T6_6', 'Q8_8'], skeleton='reference:skeleton')
Subproblem.New(name='stripe', subproblem=PixelGroupSubProblem(group='stripe'), mesh='reference:skeleton:mesh')
Subproblem.New(name='edges', subproblem=PixelGroupSubProblem(group='edges'), mesh='reference:skeleton:mesh')
Subproblem.Fields(subproblem='reference:skeleton:mesh:edges', defined=['Temperature'], active=['Temperature'], inplane=[])
Subproblem.Equations(subproblem='reference:skeleton:mesh:edges', equations=['Heat_Eqn', 'Plane_Heat_Flux'])
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc<2>', bc=NeumannBC(flux=Heat_Flux,profile=ConstantProfile(value=1.23),boundary='top',normal=False))
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(3,), (4,), (5,), (6,), (7,), (14,), (15,), (16,), (17,), (18,), (25,), (26,), (27,), (28,), (29,), (36,), (37,), (38,), (39,), (40,), (47,), (48,), (49,), (50,), (51,), (58,), (59,), (60,), (61,), (62,), (69,), (70,), (71,), (72,), (73,), (80,), (81,), (82,), (83,), (84,), (91,), (92,), (93,), (94,), (95,), (102,), (103,), (104,), (105,), (106,), (113,), (114,), (115,), (116,), (117,), (128,), (129,), (130,), (131,), (132,), (133,), (134,), (135,), (136,), (137,), (138,), (139,), (140,), (141,), (142,), (143,), (145,), (157,), (158,), (159,), (160,), (161,), (162,), (163,), (164,), (165,), (166,), (168,), (178,), (179,), (180,), (181,), (182,), (183,), (184,), (185,), (186,), (187,), (189,), (199,), (200,), (201,), (202,), (203,), (204,), (205,), (206,), (207,), (208,), (210,), (220,), (221,), (222,), (223,), (224,), (225,), (226,), (227,), (228,), (229,), (231,), (241,), (242,), (243,), (244,), (245,), (246,), (247,), (248,), (249,), (250,), (252,), (262,), (263,), (264,), (265,), (266,), (267,), (268,), (269,), (270,), (271,), (273,), (283,), (284,), (285,), (286,), (287,), (288,), (289,), (290,), (291,), (292,), (294,), (304,), (305,), (306,), (307,), (308,), (309,), (310,), (311,), (312,), (313,), (315,), (325,), (326,), (327,), (328,), (329,), (330,), (331,), (332,), (333,), (334,), (336,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(0, 0.0, 0.0), (1, 0.0, 0.0), (2, 0.0, 0.0), (8, 0.0, 0.0), (9, 0.0, 0.0), (10, 0.0, 0.0), (11, -0.12299999999998676, 0.0), (12, -0.12299999999998697, 0.0), (13, -0.12299999999998751, 0.0), (19, -0.12299999999999199, 0.0), (20, -0.12299999999999284, 0.0), (21, -0.1229999999999926, 0.0), (22, -0.2459999999999726, 0.0), (23, -0.24599999999997171, 0.0), (24, -0.24599999999996966, 0.0), (30, -0.24599999999998853, 0.0), (31, -0.24599999999999048, 0.0), (32, -0.24599999999998909, 0.0), (33, -0.36899999999996352, 0.0), (34, -0.36899999999996447, 0.0), (35, -0.36899999999996541, 0.0), (41, -0.36899999999997585, 0.0), (42, -0.36899999999998012, 0.0), (43, -0.36899999999998395, 0.0), (44, -0.49199999999995325, 0.0), (45, -0.49199999999995386, 0.0), (46, -0.49199999999995447, 0.0), (52, -0.4919999999999719, 0.0), (53, -0.49199999999997091, 0.0), (54, -0.49199999999997701, 0.0), (55, -0.61499999999994381, 0.0), (56, -0.6149999999999457, 0.0), (57, -0.61499999999994914, 0.0), (63, -0.61499999999997101, 0.0), (64, -0.61499999999997024, 0.0), (65, -0.6149999999999739, 0.0), (66, -0.7379999999999336, 0.0), (67, -0.73799999999993315, 0.0), (68, -0.73799999999992427, 0.0), (74, -0.73799999999996135, 0.0), (75, -0.73799999999996202, 0.0), (76, -0.73799999999997246, 0.0), (77, -0.86099999999992405, 0.0), (78, -0.86099999999992538, 0.0), (79, -0.86099999999991639, 0.0), (85, -0.86099999999995691, 0.0), (86, -0.86099999999995247, 0.0), (87, -0.86099999999995436, 0.0), (88, -0.98399999999992438, 0.0), (89, -0.98399999999992138, 0.0), (90, -0.98399999999991405, 0.0), (96, -0.98399999999994303, 0.0), (97, -0.98399999999995358, 0.0), (98, -0.9839999999999417, 0.0), (99, -1.1069999999999149, 0.0), (100, -1.1069999999999112, 0.0), (101, -1.1069999999999092, 0.0), (107, -1.106999999999938, 0.0), (108, -1.1069999999999405, 0.0), (109, -1.1069999999999445, 0.0), (110, -1.2299999999999089, 0.0), (111, -1.2299999999999101, 0.0), (112, -1.2299999999999145, 0.0), (118, -1.2299999999999465, 0.0), (119, -1.2299999999999418, 0.0), (120, -1.229999999999936, 0.0), (121, 0.0, 0.0), (122, -0.061499999999993553, 0.0), (123, -0.12299999999998652, 0.0), (124, -0.061499999999993372, 0.0), (125, 0.0, 0.0), (126, -0.061499999999993518, 0.0), (127, -0.12299999999998644, 0.0), (144, -0.061499999999995586, 0.0), (146, 0.0, 0.0), (147, -0.061499999999996426, 0.0), (148, -0.12299999999999171, 0.0), (149, 0.0, 0.0), (150, -0.061499999999995822, 0.0), (151, -0.12299999999999195, 0.0), (152, -0.1844999999999791, 0.0), (153, -0.24599999999997332, 0.0), (154, -0.18449999999997979, 0.0), (155, -0.18449999999998076, 0.0), (156, -0.24599999999997257, 0.0), (167, -0.18449999999999084, 0.0), (169, -0.18449999999999125, 0.0), (170, -0.24599999999998817, 0.0), (171, -0.18449999999999195, 0.0), (172, -0.24599999999998884, 0.0), (173, -0.30749999999996785, 0.0), (174, -0.36899999999996308, 0.0), (175, -0.3074999999999678, 0.0), (176, -0.30749999999996785, 0.0), (177, -0.36899999999996341, 0.0), (188, -0.30749999999998312, 0.0), (190, -0.30749999999998495, 0.0), (191, -0.36899999999997973, 0.0), (192, -0.30749999999998628, 0.0), (193, -0.36899999999998201, 0.0), (194, -0.43049999999995908, 0.0), (195, -0.49199999999995425, 0.0), (196, -0.43049999999995919, 0.0), (197, -0.43049999999996003, 0.0), (198, -0.49199999999995547, 0.0), (209, -0.43049999999997396, 0.0), (211, -0.43049999999997585, 0.0), (212, -0.4919999999999719, 0.0), (213, -0.43049999999997807, 0.0), (214, -0.49199999999997562, 0.0), (215, -0.5534999999999497, 0.0), (216, -0.61499999999994381, 0.0), (217, -0.55349999999994914, 0.0), (218, -0.55349999999995114, 0.0), (219, -0.6149999999999447, 0.0), (230, -0.55349999999997179, 0.0), (232, -0.55349999999996835, 0.0), (233, -0.61499999999997257, 0.0), (234, -0.55349999999998012, 0.0), (235, -0.61499999999996935, 0.0), (236, -0.67649999999993393, 0.0), (237, -0.73799999999993637, 0.0), (238, -0.67649999999994104, 0.0), (239, -0.67649999999993415, 0.0), (240, -0.73799999999993582, 0.0), (251, -0.67649999999996036, 0.0), (253, -0.67649999999996691, 0.0), (254, -0.73799999999996801, 0.0), (255, -0.67649999999997168, 0.0), (256, -0.73799999999996191, 0.0), (257, -0.79949999999992472, 0.0), (258, -0.86099999999992771, 0.0), (259, -0.79949999999993115, 0.0), (260, -0.79949999999992272, 0.0), (261, -0.86099999999992349, 0.0), (272, -0.79949999999995158, 0.0), (274, -0.79949999999996157, 0.0), (275, -0.86099999999995169, 0.0), (276, -0.79949999999996624, 0.0), (277, -0.86099999999995336, 0.0), (278, -0.92249999999991961, 0.0), (279, -0.9839999999999185, 0.0), (280, -0.92249999999992882, 0.0), (281, -0.92249999999991183, 0.0), (282, -0.98399999999991694, 0.0), (293, -0.92249999999994448, 0.0), (295, -0.92249999999995158, 0.0), (296, -0.98399999999994237, 0.0), (297, -0.9224999999999538, 0.0), (298, -0.98399999999994636, 0.0), (299, -1.0454999999999171, 0.0), (300, -1.1069999999999118, 0.0), (301, -1.0454999999999266, 0.0), (302, -1.0454999999999095, 0.0), (303, -1.1069999999999085, 0.0), (314, -1.0454999999999364, 0.0), (316, -1.0454999999999381, 0.0), (317, -1.106999999999952, 0.0), (318, -1.0454999999999433, 0.0), (319, -1.106999999999944, 0.0), (320, -1.1684999999999093, 0.0), (321, -1.2299999999999094, 0.0), (322, -1.1684999999999124, 0.0), (323, -1.1684999999999071, 0.0), (324, -1.2299999999999167, 0.0), (335, -1.168499999999933, 0.0), (337, -1.1684999999999384, 0.0), (338, -1.2299999999999363, 0.0), (339, -1.1684999999999388, 0.0), (340, -1.2299999999999329, 0.0)])
Mesh.Time(mesh='reference:skeleton:mesh', time=0.0)

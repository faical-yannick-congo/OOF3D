# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='reference', size=Point(1,1), isize=iPoint(10,10))
Microstructure.PixelGroup(microstructure='reference', group='stripe', meshable=1)
Microstructure.PixelGroup(microstructure='reference', group='edges', meshable=1)
Microstructure.Categories(microstructure='reference', categories=[[0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=0, groups=['edges'])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=1, groups=['stripe'])
Property.Thermal.Conductivity.Isotropic(name='', kappa=1.0)
Material(name='material', properties=['Thermal:Conductivity:Isotropic'])
Microstructure.DefineCategory.Material(microstructure='reference', category=0, material='material')
Microstructure.DefineCategory.Material(microstructure='reference', category=1, material='material')
Microstructure.EndCategories(microstructure='reference')
Skeleton.New(name='skeleton', microstructure='reference')
Skeleton.Nodes(skeleton='reference:skeleton', points=[(0.0, 0.0), (0.10000000000000001, 0.0), (0.20000000000000001, 0.0), (0.30000000000000004, 0.0), (0.40000000000000002, 0.0), (0.5, 0.0), (0.60000000000000009, 0.0), (0.70000000000000007, 0.0), (0.80000000000000004, 0.0), (0.90000000000000002, 0.0), (1.0, 0.0), (0.0, 0.10000000000000001), (0.10000000000000001, 0.10000000000000001), (0.20000000000000001, 0.10000000000000001), (0.30000000000000004, 0.10000000000000001), (0.40000000000000002, 0.10000000000000001), (0.5, 0.10000000000000001), (0.60000000000000009, 0.10000000000000001), (0.70000000000000007, 0.10000000000000001), (0.80000000000000004, 0.10000000000000001), (0.90000000000000002, 0.10000000000000001), (1.0, 0.10000000000000001), (0.0, 0.20000000000000001), (0.10000000000000001, 0.20000000000000001), (0.20000000000000001, 0.20000000000000001), (0.30000000000000004, 0.20000000000000001), (0.40000000000000002, 0.20000000000000001), (0.5, 0.20000000000000001), (0.60000000000000009, 0.20000000000000001), (0.70000000000000007, 0.20000000000000001), (0.80000000000000004, 0.20000000000000001), (0.90000000000000002, 0.20000000000000001), (1.0, 0.20000000000000001), (0.0, 0.30000000000000004), (0.10000000000000001, 0.30000000000000004), (0.20000000000000001, 0.30000000000000004), (0.30000000000000004, 0.30000000000000004), (0.40000000000000002, 0.30000000000000004), (0.5, 0.30000000000000004), (0.60000000000000009, 0.30000000000000004), (0.70000000000000007, 0.30000000000000004), (0.80000000000000004, 0.30000000000000004), (0.90000000000000002, 0.30000000000000004), (1.0, 0.30000000000000004), (0.0, 0.40000000000000002), (0.10000000000000001, 0.40000000000000002), (0.20000000000000001, 0.40000000000000002), (0.30000000000000004, 0.40000000000000002), (0.40000000000000002, 0.40000000000000002), (0.5, 0.40000000000000002), (0.60000000000000009, 0.40000000000000002), (0.70000000000000007, 0.40000000000000002), (0.80000000000000004, 0.40000000000000002), (0.90000000000000002, 0.40000000000000002), (1.0, 0.40000000000000002), (0.0, 0.5), (0.10000000000000001, 0.5), (0.20000000000000001, 0.5), (0.30000000000000004, 0.5), (0.40000000000000002, 0.5), (0.5, 0.5), (0.60000000000000009, 0.5), (0.70000000000000007, 0.5), (0.80000000000000004, 0.5), (0.90000000000000002, 0.5), (1.0, 0.5), (0.0, 0.60000000000000009), (0.10000000000000001, 0.60000000000000009), (0.20000000000000001, 0.60000000000000009), (0.30000000000000004, 0.60000000000000009), (0.40000000000000002, 0.60000000000000009), (0.5, 0.60000000000000009), (0.60000000000000009, 0.60000000000000009), (0.70000000000000007, 0.60000000000000009), (0.80000000000000004, 0.60000000000000009), (0.90000000000000002, 0.60000000000000009), (1.0, 0.60000000000000009), (0.0, 0.70000000000000007), (0.10000000000000001, 0.70000000000000007), (0.20000000000000001, 0.70000000000000007), (0.30000000000000004, 0.70000000000000007), (0.40000000000000002, 0.70000000000000007), (0.5, 0.70000000000000007), (0.60000000000000009, 0.70000000000000007), (0.70000000000000007, 0.70000000000000007), (0.80000000000000004, 0.70000000000000007), (0.90000000000000002, 0.70000000000000007), (1.0, 0.70000000000000007), (0.0, 0.80000000000000004), (0.10000000000000001, 0.80000000000000004), (0.20000000000000001, 0.80000000000000004), (0.30000000000000004, 0.80000000000000004), (0.40000000000000002, 0.80000000000000004), (0.5, 0.80000000000000004), (0.60000000000000009, 0.80000000000000004), (0.70000000000000007, 0.80000000000000004), (0.80000000000000004, 0.80000000000000004), (0.90000000000000002, 0.80000000000000004), (1.0, 0.80000000000000004), (0.0, 0.90000000000000002), (0.10000000000000001, 0.90000000000000002), (0.20000000000000001, 0.90000000000000002), (0.30000000000000004, 0.90000000000000002), (0.40000000000000002, 0.90000000000000002), (0.5, 0.90000000000000002), (0.60000000000000009, 0.90000000000000002), (0.70000000000000007, 0.90000000000000002), (0.80000000000000004, 0.90000000000000002), (0.90000000000000002, 0.90000000000000002), (1.0, 0.90000000000000002), (0.0, 1.0), (0.10000000000000001, 1.0), (0.20000000000000001, 1.0), (0.30000000000000004, 1.0), (0.40000000000000002, 1.0), (0.5, 1.0), (0.60000000000000009, 1.0), (0.70000000000000007, 1.0), (0.80000000000000004, 1.0), (0.90000000000000002, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='reference:skeleton', nodes=[(0, 1, 12, 11), (1, 2, 13, 12), (2, 3, 14, 13), (3, 4, 15, 14), (4, 5, 16, 15), (5, 6, 17, 16), (6, 7, 18, 17), (7, 8, 19, 18), (8, 9, 20, 19), (9, 10, 21, 20), (11, 12, 23, 22), (12, 13, 24, 23), (13, 14, 25, 24), (14, 15, 26, 25), (15, 16, 27, 26), (16, 17, 28, 27), (17, 18, 29, 28), (18, 19, 30, 29), (19, 20, 31, 30), (20, 21, 32, 31), (22, 23, 34, 33), (23, 24, 35, 34), (24, 25, 36, 35), (25, 26, 37, 36), (26, 27, 38, 37), (27, 28, 39, 38), (28, 29, 40, 39), (29, 30, 41, 40), (30, 31, 42, 41), (31, 32, 43, 42), (33, 34, 45, 44), (34, 35, 46, 45), (35, 36, 47, 46), (36, 37, 48, 47), (37, 38, 49, 48), (38, 39, 50, 49), (39, 40, 51, 50), (40, 41, 52, 51), (41, 42, 53, 52), (42, 43, 54, 53), (44, 45, 56, 55), (45, 46, 57, 56), (46, 47, 58, 57), (47, 48, 59, 58), (48, 49, 60, 59), (49, 50, 61, 60), (50, 51, 62, 61), (51, 52, 63, 62), (52, 53, 64, 63), (53, 54, 65, 64), (55, 56, 67, 66), (56, 57, 68, 67), (57, 58, 69, 68), (58, 59, 70, 69), (59, 60, 71, 70), (60, 61, 72, 71), (61, 62, 73, 72), (62, 63, 74, 73), (63, 64, 75, 74), (64, 65, 76, 75), (66, 67, 78, 77), (67, 68, 79, 78), (68, 69, 80, 79), (69, 70, 81, 80), (70, 71, 82, 81), (71, 72, 83, 82), (72, 73, 84, 83), (73, 74, 85, 84), (74, 75, 86, 85), (75, 76, 87, 86), (77, 78, 89, 88), (78, 79, 90, 89), (79, 80, 91, 90), (80, 81, 92, 91), (81, 82, 93, 92), (82, 83, 94, 93), (83, 84, 95, 94), (84, 85, 96, 95), (85, 86, 97, 96), (86, 87, 98, 97), (88, 89, 100, 99), (89, 90, 101, 100), (90, 91, 102, 101), (91, 92, 103, 102), (92, 93, 104, 103), (93, 94, 105, 104), (94, 95, 106, 105), (95, 96, 107, 106), (96, 97, 108, 107), (97, 98, 109, 108), (99, 100, 111, 110), (100, 101, 112, 111), (101, 102, 113, 112), (102, 103, 114, 113), (103, 104, 115, 114), (104, 105, 116, 115), (105, 106, 117, 116), (106, 107, 118, 117), (107, 108, 119, 118), (108, 109, 120, 119)])
Skeleton.PinnedNodes(skeleton='reference:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topleft', nodes=[110], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topright', nodes=[120], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomright', nodes=[10], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='midtop', nodes=[114], exterior=0)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='top', edges=[(120, 119), (119, 118), (118, 117), (117, 116), (116, 115), (115, 114), (114, 113), (113, 112), (112, 111), (111, 110)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='right', edges=[(10, 21), (21, 32), (32, 43), (43, 54), (54, 65), (65, 76), (76, 87), (87, 98), (98, 109), (109, 120)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='left', edges=[(110, 99), (99, 88), (88, 77), (77, 66), (66, 55), (55, 44), (44, 33), (33, 22), (22, 11), (11, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='bottom', edges=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)], exterior=1)
Mesh.New(name='mesh', masterelems=['T6_6', 'Q8_8'], skeleton='reference:skeleton')
Subproblem.New(name='stripe', subproblem=PixelGroupSubProblem(group='stripe'), mesh='reference:skeleton:mesh')
Subproblem.Fields(subproblem='reference:skeleton:mesh:stripe', defined=['Temperature'], active=['Temperature'], inplane=['Temperature'])
Subproblem.Equations(subproblem='reference:skeleton:mesh:stripe', equations=['Heat_Eqn'])
Subproblem.New(name='edges', subproblem=PixelGroupSubProblem(group='edges'), mesh='reference:skeleton:mesh')
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc<2>', bc=FloatBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ContinuumProfile(function='0'),boundary='top'))
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(0,), (1,), (9,), (10,), (11,), (12,), (20,), (21,), (22,), (23,), (31,), (32,), (33,), (34,), (42,), (43,), (44,), (45,), (53,), (54,), (55,), (56,), (64,), (65,), (66,), (67,), (75,), (76,), (77,), (78,), (86,), (87,), (88,), (89,), (97,), (98,), (99,), (100,), (108,), (109,), (110,), (111,), (119,), (120,), (121,), (122,), (123,), (124,), (125,), (127,), (146,), (147,), (148,), (149,), (150,), (151,), (152,), (153,), (154,), (156,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (177,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (198,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (219,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (240,), (253,), (254,), (255,), (256,), (257,), (258,), (259,), (261,), (274,), (275,), (276,), (277,), (278,), (279,), (280,), (282,), (295,), (296,), (297,), (298,), (299,), (300,), (301,), (303,), (316,), (317,), (318,), (319,), (320,), (321,), (322,), (324,), (337,), (338,), (339,), (340,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(2, 0.0, 0.0), (3, 0.0, 0.0), (4, 0.0, 0.0), (5, 0.0, 0.0), (6, 0.0, 0.0), (7, 0.0, 0.0), (8, 0.0, 0.0), (13, -2.3515756759836514e-15, 0.0), (14, -1.9638188368045823e-15, 0.0), (15, -3.1651161320838309e-16, 0.0), (16, -3.5209011906569735e-17, 0.0), (17, 2.2237333055488174e-15, 0.0), (18, 3.4061938551614888e-15, 0.0), (19, 4.1287462865963545e-15, 0.0), (24, 5.9986128187186834e-15, 0.0), (25, 3.0519847577163229e-15, 0.0), (26, 9.4121692270486175e-16, 0.0), (27, 1.0988976330623543e-15, 0.0), (28, 3.975551235543e-15, 0.0), (29, 4.8750768677958738e-15, 0.0), (30, 3.0328476369208305e-15, 0.0), (35, 9.2665530399248532e-15, 0.0), (36, 7.5788518120034031e-15, 0.0), (37, 6.1774617056094539e-15, 0.0), (38, 6.3525290152943217e-15, 0.0), (39, 6.9177247278714039e-15, 0.0), (40, 7.2132101797981174e-15, 0.0), (41, 5.6350888113496377e-15, 0.0), (46, 5.4741243624351733e-15, 0.0), (47, 4.5306814851221175e-15, 0.0), (48, 8.4598462331863452e-15, 0.0), (49, 9.5114883548015129e-15, 0.0), (50, 9.5921033771296696e-15, 0.0), (51, 8.8824163866104125e-15, 0.0), (52, 9.0264294900915247e-15, 0.0), (57, 6.0878497270507833e-15, 0.0), (58, 8.0786183336428806e-15, 0.0), (59, 1.214996367317123e-14, 0.0), (60, 1.2797685658815806e-14, 0.0), (61, 1.280214575833173e-14, 0.0), (62, 9.391526772498281e-15, 0.0), (63, 1.0027095879369948e-14, 0.0), (68, 1.8489310907305407e-14, 0.0), (69, 1.6720092131685399e-14, 0.0), (70, 9.9858078623535768e-15, 0.0), (71, 9.4836287422060804e-15, 0.0), (72, 1.0610309338386848e-14, 0.0), (73, 1.345613666438928e-14, 0.0), (74, 1.3452504546703632e-14, 0.0), (79, 1.1901526790199678e-14, 0.0), (80, 1.2792735586962177e-14, 0.0), (81, 7.173375955568292e-15, 0.0), (82, 8.572873392709649e-15, 0.0), (83, 7.2124870338335519e-15, 0.0), (84, 1.3224120675895939e-14, 0.0), (85, 1.486851979820931e-14, 0.0), (90, 8.0492240683353697e-15, 0.0), (91, 1.2821982637713501e-14, 0.0), (92, 1.2565541835459287e-14, 0.0), (93, 1.5124424044291869e-14, 0.0), (94, 1.3580216914586276e-14, 0.0), (95, 1.3445410733683308e-14, 0.0), (96, 8.4846437037443084e-15, 0.0), (101, 1.6686133695965811e-14, 0.0), (102, 1.3550258942727233e-14, 0.0), (103, 1.6756371956360366e-14, 0.0), (104, 1.4596750508684081e-14, 0.0), (105, 1.4292011882065947e-14, 0.0), (106, 1.0683972690132971e-14, 0.0), (107, 1.1419461812844122e-14, 0.0), (112, 2.3512282619464469e-14, 0.0), (113, 2.3512282619464469e-14, 0.0), (114, 2.3512282619464469e-14, 0.0), (115, 2.3512282619464469e-14, 0.0), (116, 2.3512282619464469e-14, 0.0), (117, 2.3512282619464469e-14, 0.0), (118, 2.3512282619464469e-14, 0.0), (126, -3.7354286453809791e-15, 0.0), (128, 0.0, 0.0), (129, -2.9530799374226907e-15, 0.0), (130, -1.206756877006764e-15, 0.0), (131, 0.0, 0.0), (132, -1.079674124237584e-15, 0.0), (133, -1.516175661563655e-15, 0.0), (134, 0.0, 0.0), (135, 2.0662247502853892e-15, 0.0), (136, -2.2255700284589488e-15, 0.0), (137, 0.0, 0.0), (138, 3.6098408744163275e-15, 0.0), (139, -1.4392179030307874e-16, 0.0), (140, 0.0, 0.0), (141, 3.2859581746946341e-15, 0.0), (142, 4.3829856875268964e-15, 0.0), (143, 0.0, 0.0), (144, 3.5340080628840151e-15, 0.0), (145, 1.9023894596336852e-15, 0.0), (155, 9.7673395270277204e-16, 0.0), (157, 1.6913925121572494e-15, 0.0), (158, 3.3677337969315915e-15, 0.0), (159, 7.9793922245716194e-16, 0.0), (160, 2.9734065091820358e-15, 0.0), (161, -1.3695810936949388e-15, 0.0), (162, 3.8232401073784686e-15, 0.0), (163, 8.8920654278702501e-16, 0.0), (164, 1.2262339852879061e-15, 0.0), (165, 3.2548752195322968e-15, 0.0), (166, 4.7080074784672277e-15, 0.0), (167, 3.3575267190579168e-15, 0.0), (168, 4.2767240259671268e-15, 0.0), (176, 6.4139278246578143e-15, 0.0), (178, 3.6287660737245996e-15, 0.0), (179, 7.1454882101740586e-15, 0.0), (180, 3.758649622411075e-15, 0.0), (181, 4.31230163111449e-15, 0.0), (182, 5.046224620832231e-15, 0.0), (183, 7.1143517688452826e-15, 0.0), (184, 2.6674635945989545e-15, 0.0), (185, 5.6022554262461672e-15, 0.0), (186, 3.2961071660244183e-15, 0.0), (187, 6.1308382725643095e-15, 0.0), (188, 4.0958024272017624e-15, 0.0), (189, 4.6203824655157083e-15, 0.0), (197, 7.4240632674081111e-15, 0.0), (199, 7.0614295429750107e-15, 0.0), (200, 7.2455200841253823e-15, 0.0), (201, 6.5222312013086532e-15, 0.0), (202, 4.1875781942460277e-15, 0.0), (203, 8.7105934585728847e-15, 0.0), (204, 8.3613781042794203e-15, 0.0), (205, 9.8465436987624612e-15, 0.0), (206, 7.0544728331732765e-15, 0.0), (207, 8.7472820830886074e-15, 0.0), (208, 1.0654965218782601e-14, 0.0), (209, 5.6146210155653825e-15, 0.0), (210, 7.3588605618269006e-15, 0.0), (218, 5.2054352404597502e-15, 0.0), (220, 6.6528159835531335e-15, 0.0), (221, 9.5733412683964557e-15, 0.0), (222, 8.3782678441227361e-15, 0.0), (223, 1.1492036009553768e-14, 0.0), (224, 9.8434278118696843e-15, 0.0), (225, 1.6313188026356845e-14, 0.0), (226, 1.184268485446442e-14, 0.0), (227, 1.418038665891973e-14, 0.0), (228, 1.2152591598501056e-14, 0.0), (229, 1.6650690952234487e-14, 0.0), (230, 1.0164526324836336e-14, 0.0), (231, 1.2775333956477459e-14, 0.0), (239, 9.6573822434845354e-15, 0.0), (241, 1.1058147770697247e-14, 0.0), (242, 1.5145213087339743e-14, 0.0), (243, 1.2918557462039337e-14, 0.0), (244, 1.4473242314450799e-14, 0.0), (245, 1.2030391678237127e-14, 0.0), (246, 9.8911649800350139e-15, 0.0), (247, 1.2088512960161374e-14, 0.0), (248, 1.2481602021935298e-14, 0.0), (249, 1.1911068876798137e-14, 0.0), (250, 8.8984159024210203e-15, 0.0), (251, 1.2654922838130979e-14, 0.0), (252, 1.3635604938277448e-14, 0.0), (260, 2.0683294522092476e-14, 0.0), (262, 1.6054876276329586e-14, 0.0), (263, 1.1164648172273517e-14, 0.0), (264, 1.1656017046343826e-14, 0.0), (265, 1.0120245668980153e-14, 0.0), (266, 1.054341183661634e-14, 0.0), (267, 1.8325761378003783e-16, 0.0), (268, 8.8438592252166199e-15, 0.0), (269, 4.0263212914440297e-15, 0.0), (270, 1.0092366843264348e-14, 0.0), (271, 4.6922883288387193e-15, 0.0), (272, 1.2244228665519821e-14, 0.0), (273, 9.814119216391013e-15, 0.0), (281, 1.2558784882375683e-14, 0.0), (283, 1.4141034173918911e-14, 0.0), (284, 1.1254570772747314e-14, 0.0), (285, 1.1137130651998746e-14, 0.0), (286, 1.6359288904884691e-14, 0.0), (287, 8.7005284334321978e-15, 0.0), (288, 1.3718201228556183e-14, 0.0), (289, 1.2983814661601531e-14, 0.0), (290, 1.6026346718293092e-14, 0.0), (291, 1.5536384728960529e-14, 0.0), (292, 1.3341279791682271e-14, 0.0), (293, 1.2557424726923225e-14, 0.0), (294, 1.5351732805048561e-14, 0.0), (302, 7.1298573072537188e-15, 0.0), (304, 1.0987363137246767e-14, 0.0), (305, 1.5619170930499087e-14, 0.0), (306, 1.2859075300766366e-14, 0.0), (307, 1.5875171481736112e-14, 0.0), (308, 1.4225745288671918e-14, 0.0), (309, 1.387034566202977e-14, 0.0), (310, 1.1147961032144213e-14, 0.0), (311, 1.7692909905615637e-14, 0.0), (312, 9.7045838590717258e-15, 0.0), (313, 1.3412959321983417e-14, 0.0), (314, 1.3556996073560796e-14, 0.0), (315, 7.9797451606108651e-15, 0.0), (323, 1.5532099355231347e-14, 0.0), (325, 1.8153135717379941e-14, 0.0), (326, 2.3512282619464469e-14, 0.0), (327, 1.577020291944326e-14, 0.0), (328, 2.3512282619464469e-14, 0.0), (329, 1.9705969027862768e-14, 0.0), (330, 2.3512282619464469e-14, 0.0), (331, 1.5143534033315474e-14, 0.0), (332, 2.3512282619464469e-14, 0.0), (333, 1.1518568076111749e-14, 0.0), (334, 2.3512282619464469e-14, 0.0), (335, 1.0191025694077561e-14, 0.0), (336, 2.3512282619464469e-14, 0.0)])

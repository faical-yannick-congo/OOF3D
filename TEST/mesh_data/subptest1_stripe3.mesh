# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='reference', size=Point(1,1), isize=iPoint(10,10))
Microstructure.PixelGroup(microstructure='reference', group='stripe', meshable=1)
Microstructure.PixelGroup(microstructure='reference', group='edges', meshable=1)
Microstructure.Categories(microstructure='reference', categories=[[0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=0, groups=['edges'])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=1, groups=['stripe'])
Property.Thermal.Conductivity.Isotropic(name='', kappa=1.0)
MaterialandType(name='material', properties=['Thermal:Conductivity:Isotropic'], materialtype='bulk')
Microstructure.DefineCategory.Material(microstructure='reference', category=0, material='material')
Microstructure.DefineCategory.Material(microstructure='reference', category=1, material='material')
Microstructure.EndCategories(microstructure='reference')
Skeleton.NewPeriodic(name='skeleton', microstructure='reference', left_right_periodicity=False, top_bottom_periodicity=False)
Skeleton.Nodes(skeleton='reference:skeleton', points=[(0.0, 0.0), (0.10000000000000001, 0.0), (0.20000000000000001, 0.0), (0.30000000000000004, 0.0), (0.40000000000000002, 0.0), (0.5, 0.0), (0.60000000000000009, 0.0), (0.70000000000000007, 0.0), (0.80000000000000004, 0.0), (0.90000000000000002, 0.0), (1.0, 0.0), (0.0, 0.10000000000000001), (0.10000000000000001, 0.10000000000000001), (0.20000000000000001, 0.10000000000000001), (0.30000000000000004, 0.10000000000000001), (0.40000000000000002, 0.10000000000000001), (0.5, 0.10000000000000001), (0.60000000000000009, 0.10000000000000001), (0.70000000000000007, 0.10000000000000001), (0.80000000000000004, 0.10000000000000001), (0.90000000000000002, 0.10000000000000001), (1.0, 0.10000000000000001), (0.0, 0.20000000000000001), (0.10000000000000001, 0.20000000000000001), (0.20000000000000001, 0.20000000000000001), (0.30000000000000004, 0.20000000000000001), (0.40000000000000002, 0.20000000000000001), (0.5, 0.20000000000000001), (0.60000000000000009, 0.20000000000000001), (0.70000000000000007, 0.20000000000000001), (0.80000000000000004, 0.20000000000000001), (0.90000000000000002, 0.20000000000000001), (1.0, 0.20000000000000001), (0.0, 0.30000000000000004), (0.10000000000000001, 0.30000000000000004), (0.20000000000000001, 0.30000000000000004), (0.30000000000000004, 0.30000000000000004), (0.40000000000000002, 0.30000000000000004), (0.5, 0.30000000000000004), (0.60000000000000009, 0.30000000000000004), (0.70000000000000007, 0.30000000000000004), (0.80000000000000004, 0.30000000000000004), (0.90000000000000002, 0.30000000000000004), (1.0, 0.30000000000000004), (0.0, 0.40000000000000002), (0.10000000000000001, 0.40000000000000002), (0.20000000000000001, 0.40000000000000002), (0.30000000000000004, 0.40000000000000002), (0.40000000000000002, 0.40000000000000002), (0.5, 0.40000000000000002), (0.60000000000000009, 0.40000000000000002), (0.70000000000000007, 0.40000000000000002), (0.80000000000000004, 0.40000000000000002), (0.90000000000000002, 0.40000000000000002), (1.0, 0.40000000000000002), (0.0, 0.5), (0.10000000000000001, 0.5), (0.20000000000000001, 0.5), (0.30000000000000004, 0.5), (0.40000000000000002, 0.5), (0.5, 0.5), (0.60000000000000009, 0.5), (0.70000000000000007, 0.5), (0.80000000000000004, 0.5), (0.90000000000000002, 0.5), (1.0, 0.5), (0.0, 0.60000000000000009), (0.10000000000000001, 0.60000000000000009), (0.20000000000000001, 0.60000000000000009), (0.30000000000000004, 0.60000000000000009), (0.40000000000000002, 0.60000000000000009), (0.5, 0.60000000000000009), (0.60000000000000009, 0.60000000000000009), (0.70000000000000007, 0.60000000000000009), (0.80000000000000004, 0.60000000000000009), (0.90000000000000002, 0.60000000000000009), (1.0, 0.60000000000000009), (0.0, 0.70000000000000007), (0.10000000000000001, 0.70000000000000007), (0.20000000000000001, 0.70000000000000007), (0.30000000000000004, 0.70000000000000007), (0.40000000000000002, 0.70000000000000007), (0.5, 0.70000000000000007), (0.60000000000000009, 0.70000000000000007), (0.70000000000000007, 0.70000000000000007), (0.80000000000000004, 0.70000000000000007), (0.90000000000000002, 0.70000000000000007), (1.0, 0.70000000000000007), (0.0, 0.80000000000000004), (0.10000000000000001, 0.80000000000000004), (0.20000000000000001, 0.80000000000000004), (0.30000000000000004, 0.80000000000000004), (0.40000000000000002, 0.80000000000000004), (0.5, 0.80000000000000004), (0.60000000000000009, 0.80000000000000004), (0.70000000000000007, 0.80000000000000004), (0.80000000000000004, 0.80000000000000004), (0.90000000000000002, 0.80000000000000004), (1.0, 0.80000000000000004), (0.0, 0.90000000000000002), (0.10000000000000001, 0.90000000000000002), (0.20000000000000001, 0.90000000000000002), (0.30000000000000004, 0.90000000000000002), (0.40000000000000002, 0.90000000000000002), (0.5, 0.90000000000000002), (0.60000000000000009, 0.90000000000000002), (0.70000000000000007, 0.90000000000000002), (0.80000000000000004, 0.90000000000000002), (0.90000000000000002, 0.90000000000000002), (1.0, 0.90000000000000002), (0.0, 1.0), (0.10000000000000001, 1.0), (0.20000000000000001, 1.0), (0.30000000000000004, 1.0), (0.40000000000000002, 1.0), (0.5, 1.0), (0.60000000000000009, 1.0), (0.70000000000000007, 1.0), (0.80000000000000004, 1.0), (0.90000000000000002, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='reference:skeleton', nodes=[(0, 1, 12, 11), (1, 2, 13, 12), (2, 3, 14, 13), (3, 4, 15, 14), (4, 5, 16, 15), (5, 6, 17, 16), (6, 7, 18, 17), (7, 8, 19, 18), (8, 9, 20, 19), (9, 10, 21, 20), (11, 12, 23, 22), (12, 13, 24, 23), (13, 14, 25, 24), (14, 15, 26, 25), (15, 16, 27, 26), (16, 17, 28, 27), (17, 18, 29, 28), (18, 19, 30, 29), (19, 20, 31, 30), (20, 21, 32, 31), (22, 23, 34, 33), (23, 24, 35, 34), (24, 25, 36, 35), (25, 26, 37, 36), (26, 27, 38, 37), (27, 28, 39, 38), (28, 29, 40, 39), (29, 30, 41, 40), (30, 31, 42, 41), (31, 32, 43, 42), (33, 34, 45, 44), (34, 35, 46, 45), (35, 36, 47, 46), (36, 37, 48, 47), (37, 38, 49, 48), (38, 39, 50, 49), (39, 40, 51, 50), (40, 41, 52, 51), (41, 42, 53, 52), (42, 43, 54, 53), (44, 45, 56, 55), (45, 46, 57, 56), (46, 47, 58, 57), (47, 48, 59, 58), (48, 49, 60, 59), (49, 50, 61, 60), (50, 51, 62, 61), (51, 52, 63, 62), (52, 53, 64, 63), (53, 54, 65, 64), (55, 56, 67, 66), (56, 57, 68, 67), (57, 58, 69, 68), (58, 59, 70, 69), (59, 60, 71, 70), (60, 61, 72, 71), (61, 62, 73, 72), (62, 63, 74, 73), (63, 64, 75, 74), (64, 65, 76, 75), (66, 67, 78, 77), (67, 68, 79, 78), (68, 69, 80, 79), (69, 70, 81, 80), (70, 71, 82, 81), (71, 72, 83, 82), (72, 73, 84, 83), (73, 74, 85, 84), (74, 75, 86, 85), (75, 76, 87, 86), (77, 78, 89, 88), (78, 79, 90, 89), (79, 80, 91, 90), (80, 81, 92, 91), (81, 82, 93, 92), (82, 83, 94, 93), (83, 84, 95, 94), (84, 85, 96, 95), (85, 86, 97, 96), (86, 87, 98, 97), (88, 89, 100, 99), (89, 90, 101, 100), (90, 91, 102, 101), (91, 92, 103, 102), (92, 93, 104, 103), (93, 94, 105, 104), (94, 95, 106, 105), (95, 96, 107, 106), (96, 97, 108, 107), (97, 98, 109, 108), (99, 100, 111, 110), (100, 101, 112, 111), (101, 102, 113, 112), (102, 103, 114, 113), (103, 104, 115, 114), (104, 105, 116, 115), (105, 106, 117, 116), (106, 107, 118, 117), (107, 108, 119, 118), (108, 109, 120, 119)])
Skeleton.PinnedNodes(skeleton='reference:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomright', nodes=[10], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='midtop', nodes=[114], exterior=0)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topleft', nodes=[110], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topright', nodes=[120], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='bottom', edges=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='left', edges=[(110, 99), (99, 88), (88, 77), (77, 66), (66, 55), (55, 44), (44, 33), (33, 22), (22, 11), (11, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='right', edges=[(10, 21), (21, 32), (32, 43), (43, 54), (54, 65), (65, 76), (76, 87), (87, 98), (98, 109), (109, 120)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='top', edges=[(120, 119), (119, 118), (118, 117), (117, 116), (116, 115), (115, 114), (114, 113), (113, 112), (112, 111), (111, 110)], exterior=1)
Mesh.New(name='mesh', masterelems=['T6_6', 'Q8_8'], skeleton='reference:skeleton')
Subproblem.New(name='stripe', subproblem=PixelGroupSubProblem(group='stripe'), mesh='reference:skeleton:mesh')
Subproblem.Fields(subproblem='reference:skeleton:mesh:stripe', defined=['Temperature'], active=['Temperature'], inplane=['Temperature'])
Subproblem.Equations(subproblem='reference:skeleton:mesh:stripe', equations=['Heat_Eqn'])
Subproblem.New(name='edges', subproblem=PixelGroupSubProblem(group='edges'), mesh='reference:skeleton:mesh')
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc<2>', bc=NeumannBC(flux=Heat_Flux,profile=ConstantProfile(value=1.23),boundary='top',normal=False))
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(0,), (1,), (9,), (10,), (11,), (12,), (20,), (21,), (22,), (23,), (31,), (32,), (33,), (34,), (42,), (43,), (44,), (45,), (53,), (54,), (55,), (56,), (64,), (65,), (66,), (67,), (75,), (76,), (77,), (78,), (86,), (87,), (88,), (89,), (97,), (98,), (99,), (100,), (108,), (109,), (110,), (111,), (119,), (120,), (121,), (122,), (123,), (124,), (125,), (127,), (146,), (147,), (148,), (149,), (150,), (151,), (152,), (153,), (154,), (156,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (177,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (198,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (219,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (240,), (253,), (254,), (255,), (256,), (257,), (258,), (259,), (261,), (274,), (275,), (276,), (277,), (278,), (279,), (280,), (282,), (295,), (296,), (297,), (298,), (299,), (300,), (301,), (303,), (316,), (317,), (318,), (319,), (320,), (321,), (322,), (324,), (337,), (338,), (339,), (340,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(2, 0.0, 0.0), (3, 0.0, 0.0), (4, 0.0, 0.0), (5, 0.0, 0.0), (6, 0.0, 0.0), (7, 0.0, 0.0), (8, 0.0, 0.0), (13, -0.12299999999998967, 0.0), (14, -0.1229999999999881, 0.0), (15, -0.12299999999998941, 0.0), (16, -0.12299999999999023, 0.0), (17, -0.12299999999999284, 0.0), (18, -0.12299999999999399, 0.0), (19, -0.12299999999999327, 0.0), (24, -0.24599999999998159, 0.0), (25, -0.24599999999998112, 0.0), (26, -0.24599999999998151, 0.0), (27, -0.24599999999998268, 0.0), (28, -0.24599999999998409, 0.0), (29, -0.24599999999998479, 0.0), (30, -0.24599999999998534, 0.0), (35, -0.36899999999997468, 0.0), (36, -0.36899999999997479, 0.0), (37, -0.36899999999997368, 0.0), (38, -0.36899999999997479, 0.0), (39, -0.3689999999999764, 0.0), (40, -0.36899999999997646, 0.0), (41, -0.36899999999997535, 0.0), (46, -0.49199999999996874, 0.0), (47, -0.49199999999996918, 0.0), (48, -0.49199999999996907, 0.0), (49, -0.49199999999996807, 0.0), (50, -0.49199999999996702, 0.0), (51, -0.49199999999996807, 0.0), (52, -0.49199999999996852, 0.0), (57, -0.61499999999996025, 0.0), (58, -0.61499999999996013, 0.0), (59, -0.61499999999996091, 0.0), (60, -0.61499999999996391, 0.0), (61, -0.61499999999996546, 0.0), (62, -0.61499999999996524, 0.0), (63, -0.61499999999996491, 0.0), (68, -0.73799999999995736, 0.0), (69, -0.73799999999995647, 0.0), (70, -0.73799999999995991, 0.0), (71, -0.73799999999996102, 0.0), (72, -0.73799999999996313, 0.0), (73, -0.7379999999999628, 0.0), (74, -0.73799999999996146, 0.0), (79, -0.8609999999999528, 0.0), (80, -0.86099999999995436, 0.0), (81, -0.86099999999995525, 0.0), (82, -0.86099999999995658, 0.0), (83, -0.86099999999996168, 0.0), (84, -0.86099999999996057, 0.0), (85, -0.86099999999996102, 0.0), (90, -0.98399999999994947, 0.0), (91, -0.98399999999995214, 0.0), (92, -0.9839999999999568, 0.0), (93, -0.98399999999995347, 0.0), (94, -0.98399999999995935, 0.0), (95, -0.98399999999996091, 0.0), (96, -0.98399999999996324, 0.0), (101, -1.1069999999999462, 0.0), (102, -1.1069999999999474, 0.0), (103, -1.1069999999999474, 0.0), (104, -1.1069999999999487, 0.0), (105, -1.1069999999999609, 0.0), (106, -1.1069999999999662, 0.0), (107, -1.1069999999999687, 0.0), (112, -1.229999999999948, 0.0), (113, -1.2299999999999502, 0.0), (114, -1.229999999999952, 0.0), (115, -1.2299999999999494, 0.0), (116, -1.2299999999999642, 0.0), (117, -1.2299999999999665, 0.0), (118, -1.2299999999999682, 0.0), (126, -0.061499999999994601, 0.0), (128, 0.0, 0.0), (129, -0.061499999999993955, 0.0), (130, -0.12299999999998942, 0.0), (131, 0.0, 0.0), (132, -0.061499999999994039, 0.0), (133, -0.12299999999998776, 0.0), (134, 0.0, 0.0), (135, -0.06149999999999526, 0.0), (136, -0.12299999999999024, 0.0), (137, 0.0, 0.0), (138, -0.061499999999996578, 0.0), (139, -0.12299999999999109, 0.0), (140, 0.0, 0.0), (141, -0.061499999999997911, 0.0), (142, -0.12299999999999342, 0.0), (143, 0.0, 0.0), (144, -0.06149999999999653, 0.0), (145, -0.12299999999999323, 0.0), (155, -0.18449999999998604, 0.0), (157, -0.18449999999998393, 0.0), (158, -0.24599999999998134, 0.0), (159, -0.18449999999998568, 0.0), (160, -0.24599999999998121, 0.0), (161, -0.18449999999998587, 0.0), (162, -0.2459999999999814, 0.0), (163, -0.18449999999998826, 0.0), (164, -0.24599999999998273, 0.0), (165, -0.18449999999998998, 0.0), (166, -0.2459999999999852, 0.0), (167, -0.18449999999998917, 0.0), (168, -0.24599999999998495, 0.0), (176, -0.30749999999997862, 0.0), (178, -0.30749999999997862, 0.0), (179, -0.36899999999997496, 0.0), (180, -0.30749999999997807, 0.0), (181, -0.36899999999997596, 0.0), (182, -0.30749999999997818, 0.0), (183, -0.36899999999997463, 0.0), (184, -0.30749999999997968, 0.0), (185, -0.36899999999997546, 0.0), (186, -0.30749999999998068, 0.0), (187, -0.36899999999997612, 0.0), (188, -0.30749999999998062, 0.0), (189, -0.36899999999997624, 0.0), (197, -0.43049999999997279, 0.0), (199, -0.43049999999997091, 0.0), (200, -0.49199999999996769, 0.0), (201, -0.43049999999997091, 0.0), (202, -0.49199999999996724, 0.0), (203, -0.43049999999997124, 0.0), (204, -0.49199999999996757, 0.0), (205, -0.43049999999997068, 0.0), (206, -0.49199999999996874, 0.0), (207, -0.43049999999997024, 0.0), (208, -0.49199999999996813, 0.0), (209, -0.43049999999997124, 0.0), (210, -0.49199999999996863, 0.0), (218, -0.55349999999996324, 0.0), (220, -0.55349999999996302, 0.0), (221, -0.61499999999996158, 0.0), (222, -0.55349999999996335, 0.0), (223, -0.61499999999996136, 0.0), (224, -0.55349999999996669, 0.0), (225, -0.61499999999996258, 0.0), (226, -0.55349999999996713, 0.0), (227, -0.61499999999996469, 0.0), (228, -0.55349999999996735, 0.0), (229, -0.6149999999999638, 0.0), (230, -0.55349999999996602, 0.0), (231, -0.61499999999996602, 0.0), (239, -0.67649999999995925, 0.0), (241, -0.67649999999995891, 0.0), (242, -0.73799999999995725, 0.0), (243, -0.67649999999996013, 0.0), (244, -0.7379999999999558, 0.0), (245, -0.67649999999996191, 0.0), (246, -0.73799999999995913, 0.0), (247, -0.67649999999996235, 0.0), (248, -0.73799999999996091, 0.0), (249, -0.6764999999999638, 0.0), (250, -0.73799999999996235, 0.0), (251, -0.67649999999996435, 0.0), (252, -0.73799999999996246, 0.0), (260, -0.79949999999995636, 0.0), (262, -0.79949999999995447, 0.0), (263, -0.8609999999999538, 0.0), (264, -0.79949999999995769, 0.0), (265, -0.86099999999995613, 0.0), (266, -0.79949999999995924, 0.0), (267, -0.86099999999995747, 0.0), (268, -0.79949999999996035, 0.0), (269, -0.86099999999996002, 0.0), (270, -0.7994999999999608, 0.0), (271, -0.86099999999996002, 0.0), (272, -0.7994999999999618, 0.0), (273, -0.86099999999996124, 0.0), (281, -0.92249999999995003, 0.0), (283, -0.9224999999999528, 0.0), (284, -0.98399999999994969, 0.0), (285, -0.92249999999995547, 0.0), (286, -0.98399999999995225, 0.0), (287, -0.92249999999995624, 0.0), (288, -0.98399999999995202, 0.0), (289, -0.92249999999995924, 0.0), (290, -0.98399999999995635, 0.0), (291, -0.92249999999996124, 0.0), (292, -0.98399999999996046, 0.0), (293, -0.92249999999996113, 0.0), (294, -0.98399999999996257, 0.0), (302, -1.0454999999999475, 0.0), (304, -1.0454999999999497, 0.0), (305, -1.1069999999999467, 0.0), (306, -1.0454999999999501, 0.0), (307, -1.1069999999999474, 0.0), (308, -1.0454999999999539, 0.0), (309, -1.1069999999999498, 0.0), (310, -1.0454999999999588, 0.0), (311, -1.1069999999999565, 0.0), (312, -1.0454999999999635, 0.0), (313, -1.1069999999999638, 0.0), (314, -1.0454999999999659, 0.0), (315, -1.1069999999999667, 0.0), (323, -1.1684999999999457, 0.0), (325, -1.1684999999999495, 0.0), (326, -1.2299999999999476, 0.0), (327, -1.1684999999999492, 0.0), (328, -1.2299999999999522, 0.0), (329, -1.1684999999999486, 0.0), (330, -1.2299999999999478, 0.0), (331, -1.1684999999999595, 0.0), (332, -1.2299999999999545, 0.0), (333, -1.1684999999999643, 0.0), (334, -1.2299999999999691, 0.0), (335, -1.1684999999999701, 0.0), (336, -1.2299999999999671, 0.0)])
Mesh.Time(mesh='reference:skeleton:mesh', time=0.0)

OOF.Microstructure.New(name='microstructure', width=1.0, height=1.0, width_in_pixels=10, height_in_pixels=10)
OOF.Material.New(name='materialx')
OOF.Property.Copy(property='Mechanical:Elasticity:Isotropic',new_name='elastix')
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic.elastix(cijkl=IsotropicRank4TensorEnu(young=1,poisson=0.33333333333333331))
OOF.Material.Add_property(name='materialx', property='Mechanical:Elasticity:Isotropic:elastix')
OOF.Windows.Graphics.New()
OOF.LayerEditor.LayerSet.New(window='Graphics_1')
OOF.LayerEditor.LayerSet.DisplayedObject(category='Microstructure', object='microstructure')
OOF.LayerEditor.LayerSet.Add_Method(method=MicrostructureMaterialDisplay(no_material=Gray(value=0.38095238095238093),no_color=RGBColor(red=0.0,green=0.0,blue=1.0)))
OOF.LayerEditor.LayerSet.Send(window='Graphics_1')
OOF.LayerEditor.LayerSet.Send(window='Graphics_1')
OOF.Graphics_1.Settings.Zoom.Fill_Window()
OOF.Graphics_1.Toolbox.Pixel_Select.Rectangle(source='microstructure', points=[Point(0.0326087,0.945652), Point(0.415217,0.0195652)], shift=0, ctrl=0)
OOF.Graphics_1.Toolbox.Pixel_Select.Rectangle(source='microstructure', points=[Point(0.0282609,0.971739), Point(0.319565,0.0326087)], shift=0, ctrl=0)
OOF.Graphics_1.Toolbox.Pixel_Select.Rectangle(source='microstructure', points=[Point(0.332609,0.341304), Point(1.03261,-0.00217391)], shift=1, ctrl=0)
OOF.Material.Assign(material='materialx', microstructure='microstructure', pixels=selection)
OOF.Skeleton.New(name='skeleton', microstructure='microstructure', x_elements=20, y_elements=20, skeleton_geometry=QuadSkeleton())
OOF.Graphics_1.Layer.Deselect(n=0)
OOF.Graphics_1.Toolbox.Select_Segment.Rectangle(skeleton='microstructure:skeleton', points=[Point(1.0413,0.415217), Point(0.945652,1.01957)], shift=0, ctrl=0)
OOF.Graphics_1.Toolbox.Select_Segment.Single_Segment(skeleton='microstructure:skeleton', points=[Point(0.993478,0.419565)], shift=1, ctrl=0)
OOF.Skeleton.Boundary.Modify(skeleton='microstructure:skeleton', boundary='right', modifier=RemoveSegments(group=selection))
OOF.Graphics_1.Toolbox.Select_Segment.Clear(skeleton='microstructure:skeleton')
OOF.Mesh.New(name='mesh', skeleton='microstructure:skeleton', element_types=['T3_3', 'Q4_4'])
OOF.Mesh.Field.Define(mesh='microstructure:skeleton:mesh', field=Displacement)
OOF.Mesh.Field.Activate(mesh='microstructure:skeleton:mesh', field=Displacement)
OOF.Mesh.Field.In_Plane(mesh='microstructure:skeleton:mesh', field=Displacement)
OOF.Mesh.Equation.Activate(mesh='microstructure:skeleton:mesh', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<3>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='bc<4>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='bc<5>', mesh='microstructure:skeleton:mesh', condition=NeumannBC(flux=Stress,profile=[ConstantProfile(value=0.0), ConstantProfile(value=-0.030000000000000001)],boundary='right',normal=True))
OOF.Mesh.Boundary_Conditions.New(name='bc<6>', mesh='microstructure:skeleton:mesh', condition=FloatBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfile(function='-(y-0.15)**2'),boundary='right'))
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', linearity=Linear(), solver=StaticDriver(matrixmethod=ConjugateGradient(preconditioner=ILUPreconditioner(),tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='microstructure:skeleton:mesh', endtime=0.0, stepsize=0)
OOF.Graphics_1.File.Close()

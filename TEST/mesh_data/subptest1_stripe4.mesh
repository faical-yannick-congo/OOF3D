# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='reference', size=Point(1,1), isize=iPoint(10,10))
Microstructure.PixelGroup(microstructure='reference', group='stripe', meshable=1)
Microstructure.PixelGroup(microstructure='reference', group='edges', meshable=1)
Microstructure.Categories(microstructure='reference', categories=[[0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=0, groups=['edges'])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=1, groups=['stripe'])
Property.Thermal.Conductivity.Isotropic(name='', kappa=1.0)
MaterialandType(name='material', properties=['Thermal:Conductivity:Isotropic'], materialtype='bulk')
Microstructure.DefineCategory.Material(microstructure='reference', category=0, material='material')
Microstructure.DefineCategory.Material(microstructure='reference', category=1, material='material')
Microstructure.EndCategories(microstructure='reference')
Skeleton.NewPeriodic(name='skeleton', microstructure='reference', left_right_periodicity=False, top_bottom_periodicity=False)
Skeleton.Nodes(skeleton='reference:skeleton', points=[(0.0, 0.0), (0.10000000000000001, 0.0), (0.20000000000000001, 0.0), (0.30000000000000004, 0.0), (0.40000000000000002, 0.0), (0.5, 0.0), (0.60000000000000009, 0.0), (0.70000000000000007, 0.0), (0.80000000000000004, 0.0), (0.90000000000000002, 0.0), (1.0, 0.0), (0.0, 0.10000000000000001), (0.10000000000000001, 0.10000000000000001), (0.20000000000000001, 0.10000000000000001), (0.30000000000000004, 0.10000000000000001), (0.40000000000000002, 0.10000000000000001), (0.5, 0.10000000000000001), (0.60000000000000009, 0.10000000000000001), (0.70000000000000007, 0.10000000000000001), (0.80000000000000004, 0.10000000000000001), (0.90000000000000002, 0.10000000000000001), (1.0, 0.10000000000000001), (0.0, 0.20000000000000001), (0.10000000000000001, 0.20000000000000001), (0.20000000000000001, 0.20000000000000001), (0.30000000000000004, 0.20000000000000001), (0.40000000000000002, 0.20000000000000001), (0.5, 0.20000000000000001), (0.60000000000000009, 0.20000000000000001), (0.70000000000000007, 0.20000000000000001), (0.80000000000000004, 0.20000000000000001), (0.90000000000000002, 0.20000000000000001), (1.0, 0.20000000000000001), (0.0, 0.30000000000000004), (0.10000000000000001, 0.30000000000000004), (0.20000000000000001, 0.30000000000000004), (0.30000000000000004, 0.30000000000000004), (0.40000000000000002, 0.30000000000000004), (0.5, 0.30000000000000004), (0.60000000000000009, 0.30000000000000004), (0.70000000000000007, 0.30000000000000004), (0.80000000000000004, 0.30000000000000004), (0.90000000000000002, 0.30000000000000004), (1.0, 0.30000000000000004), (0.0, 0.40000000000000002), (0.10000000000000001, 0.40000000000000002), (0.20000000000000001, 0.40000000000000002), (0.30000000000000004, 0.40000000000000002), (0.40000000000000002, 0.40000000000000002), (0.5, 0.40000000000000002), (0.60000000000000009, 0.40000000000000002), (0.70000000000000007, 0.40000000000000002), (0.80000000000000004, 0.40000000000000002), (0.90000000000000002, 0.40000000000000002), (1.0, 0.40000000000000002), (0.0, 0.5), (0.10000000000000001, 0.5), (0.20000000000000001, 0.5), (0.30000000000000004, 0.5), (0.40000000000000002, 0.5), (0.5, 0.5), (0.60000000000000009, 0.5), (0.70000000000000007, 0.5), (0.80000000000000004, 0.5), (0.90000000000000002, 0.5), (1.0, 0.5), (0.0, 0.60000000000000009), (0.10000000000000001, 0.60000000000000009), (0.20000000000000001, 0.60000000000000009), (0.30000000000000004, 0.60000000000000009), (0.40000000000000002, 0.60000000000000009), (0.5, 0.60000000000000009), (0.60000000000000009, 0.60000000000000009), (0.70000000000000007, 0.60000000000000009), (0.80000000000000004, 0.60000000000000009), (0.90000000000000002, 0.60000000000000009), (1.0, 0.60000000000000009), (0.0, 0.70000000000000007), (0.10000000000000001, 0.70000000000000007), (0.20000000000000001, 0.70000000000000007), (0.30000000000000004, 0.70000000000000007), (0.40000000000000002, 0.70000000000000007), (0.5, 0.70000000000000007), (0.60000000000000009, 0.70000000000000007), (0.70000000000000007, 0.70000000000000007), (0.80000000000000004, 0.70000000000000007), (0.90000000000000002, 0.70000000000000007), (1.0, 0.70000000000000007), (0.0, 0.80000000000000004), (0.10000000000000001, 0.80000000000000004), (0.20000000000000001, 0.80000000000000004), (0.30000000000000004, 0.80000000000000004), (0.40000000000000002, 0.80000000000000004), (0.5, 0.80000000000000004), (0.60000000000000009, 0.80000000000000004), (0.70000000000000007, 0.80000000000000004), (0.80000000000000004, 0.80000000000000004), (0.90000000000000002, 0.80000000000000004), (1.0, 0.80000000000000004), (0.0, 0.90000000000000002), (0.10000000000000001, 0.90000000000000002), (0.20000000000000001, 0.90000000000000002), (0.30000000000000004, 0.90000000000000002), (0.40000000000000002, 0.90000000000000002), (0.5, 0.90000000000000002), (0.60000000000000009, 0.90000000000000002), (0.70000000000000007, 0.90000000000000002), (0.80000000000000004, 0.90000000000000002), (0.90000000000000002, 0.90000000000000002), (1.0, 0.90000000000000002), (0.0, 1.0), (0.10000000000000001, 1.0), (0.20000000000000001, 1.0), (0.30000000000000004, 1.0), (0.40000000000000002, 1.0), (0.5, 1.0), (0.60000000000000009, 1.0), (0.70000000000000007, 1.0), (0.80000000000000004, 1.0), (0.90000000000000002, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='reference:skeleton', nodes=[(0, 1, 12, 11), (1, 2, 13, 12), (2, 3, 14, 13), (3, 4, 15, 14), (4, 5, 16, 15), (5, 6, 17, 16), (6, 7, 18, 17), (7, 8, 19, 18), (8, 9, 20, 19), (9, 10, 21, 20), (11, 12, 23, 22), (12, 13, 24, 23), (13, 14, 25, 24), (14, 15, 26, 25), (15, 16, 27, 26), (16, 17, 28, 27), (17, 18, 29, 28), (18, 19, 30, 29), (19, 20, 31, 30), (20, 21, 32, 31), (22, 23, 34, 33), (23, 24, 35, 34), (24, 25, 36, 35), (25, 26, 37, 36), (26, 27, 38, 37), (27, 28, 39, 38), (28, 29, 40, 39), (29, 30, 41, 40), (30, 31, 42, 41), (31, 32, 43, 42), (33, 34, 45, 44), (34, 35, 46, 45), (35, 36, 47, 46), (36, 37, 48, 47), (37, 38, 49, 48), (38, 39, 50, 49), (39, 40, 51, 50), (40, 41, 52, 51), (41, 42, 53, 52), (42, 43, 54, 53), (44, 45, 56, 55), (45, 46, 57, 56), (46, 47, 58, 57), (47, 48, 59, 58), (48, 49, 60, 59), (49, 50, 61, 60), (50, 51, 62, 61), (51, 52, 63, 62), (52, 53, 64, 63), (53, 54, 65, 64), (55, 56, 67, 66), (56, 57, 68, 67), (57, 58, 69, 68), (58, 59, 70, 69), (59, 60, 71, 70), (60, 61, 72, 71), (61, 62, 73, 72), (62, 63, 74, 73), (63, 64, 75, 74), (64, 65, 76, 75), (66, 67, 78, 77), (67, 68, 79, 78), (68, 69, 80, 79), (69, 70, 81, 80), (70, 71, 82, 81), (71, 72, 83, 82), (72, 73, 84, 83), (73, 74, 85, 84), (74, 75, 86, 85), (75, 76, 87, 86), (77, 78, 89, 88), (78, 79, 90, 89), (79, 80, 91, 90), (80, 81, 92, 91), (81, 82, 93, 92), (82, 83, 94, 93), (83, 84, 95, 94), (84, 85, 96, 95), (85, 86, 97, 96), (86, 87, 98, 97), (88, 89, 100, 99), (89, 90, 101, 100), (90, 91, 102, 101), (91, 92, 103, 102), (92, 93, 104, 103), (93, 94, 105, 104), (94, 95, 106, 105), (95, 96, 107, 106), (96, 97, 108, 107), (97, 98, 109, 108), (99, 100, 111, 110), (100, 101, 112, 111), (101, 102, 113, 112), (102, 103, 114, 113), (103, 104, 115, 114), (104, 105, 116, 115), (105, 106, 117, 116), (106, 107, 118, 117), (107, 108, 119, 118), (108, 109, 120, 119)])
Skeleton.PinnedNodes(skeleton='reference:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomright', nodes=[10], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='midtop', nodes=[114], exterior=0)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topleft', nodes=[110], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topright', nodes=[120], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='bottom', edges=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='left', edges=[(110, 99), (99, 88), (88, 77), (77, 66), (66, 55), (55, 44), (44, 33), (33, 22), (22, 11), (11, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='right', edges=[(10, 21), (21, 32), (32, 43), (43, 54), (54, 65), (65, 76), (76, 87), (87, 98), (98, 109), (109, 120)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='top', edges=[(120, 119), (119, 118), (118, 117), (117, 116), (116, 115), (115, 114), (114, 113), (113, 112), (112, 111), (111, 110)], exterior=1)
Mesh.New(name='mesh', masterelems=['T6_6', 'Q8_8'], skeleton='reference:skeleton')
Subproblem.New(name='stripe', subproblem=PixelGroupSubProblem(group='stripe'), mesh='reference:skeleton:mesh')
Subproblem.Fields(subproblem='reference:skeleton:mesh:stripe', defined=['Temperature'], active=['Temperature'], inplane=['Temperature'])
Subproblem.Equations(subproblem='reference:skeleton:mesh:stripe', equations=['Heat_Eqn'])
Subproblem.New(name='edges', subproblem=PixelGroupSubProblem(group='edges'), mesh='reference:skeleton:mesh')
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc<2>', bc=ForceBC(equation=Heat_Eqn,eqn_component='',profile=ContinuumProfile(function='1'),boundary='midtop'))
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(0,), (1,), (9,), (10,), (11,), (12,), (20,), (21,), (22,), (23,), (31,), (32,), (33,), (34,), (42,), (43,), (44,), (45,), (53,), (54,), (55,), (56,), (64,), (65,), (66,), (67,), (75,), (76,), (77,), (78,), (86,), (87,), (88,), (89,), (97,), (98,), (99,), (100,), (108,), (109,), (110,), (111,), (119,), (120,), (121,), (122,), (123,), (124,), (125,), (127,), (146,), (147,), (148,), (149,), (150,), (151,), (152,), (153,), (154,), (156,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (177,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (198,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (219,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (240,), (253,), (254,), (255,), (256,), (257,), (258,), (259,), (261,), (274,), (275,), (276,), (277,), (278,), (279,), (280,), (282,), (295,), (296,), (297,), (298,), (299,), (300,), (301,), (303,), (316,), (317,), (318,), (319,), (320,), (321,), (322,), (324,), (337,), (338,), (339,), (340,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(2, 0.0, 0.0), (3, 0.0, 0.0), (4, 0.0, 0.0), (5, 0.0, 0.0), (6, 0.0, 0.0), (7, 0.0, 0.0), (8, 0.0, 0.0), (13, -0.16851328988276512, 0.0), (14, -0.1682700946476679, 0.0), (15, -0.16760135543934868, 0.0), (16, -0.16667775606198346, 0.0), (17, -0.16574274280334195, 0.0), (18, -0.16505119538677254, 0.0), (19, -0.16479660591205122, 0.0), (24, -0.33753555979805289, 0.0), (25, -0.33698760056601035, 0.0), (26, -0.33547452702260466, 0.0), (27, -0.33337212057642635, 0.0), (28, -0.33123226454964338, 0.0), (29, -0.3296440940787152, 0.0), (30, -0.3290584887226467, 0.0), (35, -0.50769231987979624, 0.0), (36, -0.50670109873782587, 0.0), (37, -0.50395130139299293, 0.0), (38, -0.50009951395325059, 0.0), (39, -0.49614327071977293, 0.0), (40, -0.49318507482469831, 0.0), (41, -0.49208992795937218, 0.0), (46, -0.67992261325050096, 0.0), (47, -0.67829000763021674, 0.0), (48, -0.67366139143065762, 0.0), (49, -0.66699760795560847, 0.0), (50, -0.66002339548510214, 0.0), (51, -0.65476574248048769, 0.0), (52, -0.65281476629178092, 0.0), (57, -0.85545789352347279, 0.0), (58, -0.85283232614323945, 0.0), (59, -0.84526989313185574, 0.0), (60, -0.83409437461053748, 0.0), (61, -0.82208949134959919, 0.0), (62, -0.81287311187953804, 0.0), (63, -0.80942626712348908, 0.0), (68, -1.0363414628031842, 0.0), (69, -1.033072699826131, 0.0), (70, -1.0219400601660753, 0.0), (71, -1.0028244315945574, 0.0), (72, -0.98125984688318479, 0.0), (73, -0.96483539043473765, 0.0), (74, -0.95876979037320165, 0.0), (79, -1.2234699914707159, 0.0), (80, -1.2190970933394853, 0.0), (81, -1.203022505246264, 0.0), (82, -1.1719926500486717, 0.0), (83, -1.1349848700791845, 0.0), (84, -1.1059732505181805, 0.0), (85, -1.0952822712442967, 0.0), (90, -1.4139577580636078, 0.0), (91, -1.4247132904228108, 0.0), (92, -1.4227054572049467, 0.0), (93, -1.3560912669268659, 0.0), (94, -1.2779584569233333, 0.0), (95, -1.2273263301794279, 0.0), (96, -1.2099045229191321, 0.0), (101, -1.5971273076340526, 0.0), (102, -1.6029575921535846, 0.0), (103, -1.6485245063101621, 0.0), (104, -1.5143649831127104, 0.0), (105, -1.4005938392160175, 0.0), (106, -1.3129133768953416, 0.0), (107, -1.2894635586190051, 0.0), (112, -1.6937374619138805, 0.0), (113, -1.7320038588628492, 0.0), (114, -2.6114542762343302, 0.0), (115, -1.6347289782108825, 0.0), (116, -1.4597234300066608, 0.0), (117, -1.3445920283302999, 0.0), (118, -1.3186076639810815, 0.0), (126, -0.084225601574029474, 0.0), (128, 0.0, 0.0), (129, -0.084107867734276004, 0.0), (130, -0.16845049131471521, 0.0), (131, 0.0, 0.0), (132, -0.083784359002675141, 0.0), (133, -0.16798008158370439, 0.0), (134, 0.0, 0.0), (135, -0.083338099663757659, 0.0), (136, -0.1671575116350667, 0.0), (137, 0.0, 0.0), (138, -0.08288691338005176, 0.0), (139, -0.16619595323733735, 0.0), (140, 0.0, 0.0), (141, -0.08255355565836589, 0.0), (142, -0.16535357953630714, 0.0), (143, 0.0, 0.0), (144, -0.082430899784237885, 0.0), (145, -0.16486333657456825, 0.0), (155, -0.25292351123915946, 0.0), (157, -0.25254004976273475, 0.0), (158, -0.33739088316444305, 0.0), (159, -0.2514838395598365, 0.0), (160, -0.33632691895328348, 0.0), (161, -0.2500216080708626, 0.0), (162, -0.33446008340277894, 0.0), (163, -0.2485382602346432, 0.0), (164, -0.33226769506285281, 0.0), (165, -0.24743977294802563, 0.0), (166, -0.33033843658777767, 0.0), (167, -0.24703515089891107, 0.0), (168, -0.32921216730190223, 0.0), (176, -0.42241782586278886, 0.0), (178, -0.42167053425207091, 0.0), (179, -0.50744274225013863, 0.0), (180, -0.41960441429671319, 0.0), (181, -0.50552298821590769, 0.0), (182, -0.41672613952727827, 0.0), (183, -0.50211732949322185, 0.0), (184, -0.41378661589063981, 0.0), (185, -0.49807154849831459, 0.0), (186, -0.41159807930062026, 0.0), (187, -0.49448216445340976, 0.0), (188, -0.41078962220443577, 0.0), (189, -0.49237753531480605, 0.0), (197, -0.59347450909096966, 0.0), (199, -0.59219247048320345, 0.0), (200, -0.67947838605181088, 0.0), (201, -0.58860419080756576, 0.0), (202, -0.67624350765733321, 0.0), (203, -0.58352033167002448, 0.0), (204, -0.67042653410847075, 0.0), (205, -0.5782566179588543, 0.0), (206, -0.66339830201803163, 0.0), (207, -0.57430674447603236, 0.0), (208, -0.65707099902622657, 0.0), (209, -0.57284299841899278, 0.0), (210, -0.65332885376132399, 0.0), (218, -0.76715245693509093, 0.0), (220, -0.76505651939582131, 0.0), (221, -0.85487211816968345, 0.0), (222, -0.75910025648441026, 0.0), (223, -0.84981510618121792, 0.0), (224, -0.75046830715334667, 0.0), (225, -0.84019268113479506, 0.0), (226, -0.74134382521016451, 0.0), (227, -0.82805225665530502, 0.0), (228, -0.73440209082418628, 0.0), (229, -0.81693351413087578, 0.0), (230, -0.73181365712050994, 0.0), (231, -0.81033368500876779, 0.0), (239, -0.94517777096701927, 0.0), (241, -0.94214130119829076, 0.0), (242, -1.0353496804724047, 0.0), (243, -0.9328384449736048, 0.0), (244, -1.0276683968096432, 0.0), (245, -0.91823887582649666, 0.0), (246, -1.0122009555755986, 0.0), (247, -0.90218773289265686, 0.0), (248, -0.99160426468748497, 0.0), (249, -0.8898906147108917, 0.0), (250, -0.97206844007136972, 0.0), (251, -0.88531762276023118, 0.0), (252, -0.96036423463684062, 0.0), (260, -1.1290040945857405, 0.0), (262, -1.1248618135076585, 0.0), (263, -1.2231522769050511, 0.0), (264, -1.1109395710250958, 0.0), (265, -1.2163228580211307, 0.0), (266, -1.0868450486956014, 0.0), (267, -1.192447763068144, 0.0), (268, -1.0589788307385526, 0.0), (269, -1.1541518037519343, 0.0), (270, -1.0372553065323629, 0.0), (271, -1.1186163205512643, 0.0), (272, -1.0291693204978825, 0.0), (273, -1.0980857274075255, 0.0), (281, -1.3199483281685103, 0.0), (283, -1.3205199005453956, 0.0), (284, -1.4172188612074317, 0.0), (285, -1.3071336495275248, 0.0), (286, -1.4145610025541415, 0.0), (287, -1.2630593486808739, 0.0), (288, -1.3803259771407828, 0.0), (289, -1.2089056848952815, 0.0), (290, -1.3139665211506104, 0.0), (291, -1.1699148189665469, 0.0), (292, -1.2493468070325788, 0.0), (293, -1.156157309338292, 0.0), (294, -1.2142178598397169, 0.0), (302, -1.5072821300627994, 0.0), (304, -1.517576817877397, 0.0), (305, -1.593322761470354, 0.0), (306, -1.5166915666965604, 0.0), (307, -1.6960348544464483, 0.0), (308, -1.4374713032298423, 0.0), (309, -1.6524618058825509, 0.0), (310, -1.3424201007116141, 0.0), (311, -1.4527774462883938, 0.0), (312, -1.2766306725346788, 0.0), (313, -1.3494940348684767, 0.0), (314, -1.254512620800101, 0.0), (315, -1.2945842316362595, 0.0), (323, -1.6352499847266104, 0.0), (325, -1.7514652368463743, 0.0), (326, -1.6803661349246923, 0.0), (327, -1.9610171654827013, 0.0), (328, -1.9938739010106652, 0.0), (329, -1.6533581126573509, 0.0), (330, -1.9463941502350408, 0.0), (331, -1.4276006372852805, 0.0), (332, -1.5212425592006493, 0.0), (333, -1.3399951649557635, 0.0), (334, -1.3899884074720841, 0.0), (335, -1.3092022462252879, 0.0), (336, -1.323797279860323, 0.0)])
Mesh.Time(mesh='reference:skeleton:mesh', time=0.0)

# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='reference', size=Point(1,1), isize=iPoint(10,10))
Microstructure.PixelGroup(microstructure='reference', group='stripe', meshable=1)
Microstructure.PixelGroup(microstructure='reference', group='edges', meshable=1)
Microstructure.Categories(microstructure='reference', categories=[[0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=0, groups=['edges'])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=1, groups=['stripe'])
Property.Thermal.Conductivity.Isotropic(name='', kappa=1.0)
Material(name='material', properties=['Thermal:Conductivity:Isotropic'])
Microstructure.DefineCategory.Material(microstructure='reference', category=0, material='material')
Microstructure.DefineCategory.Material(microstructure='reference', category=1, material='material')
Microstructure.EndCategories(microstructure='reference')
Skeleton.New(name='skeleton', microstructure='reference')
Skeleton.Nodes(skeleton='reference:skeleton', points=[(0.0, 0.0), (0.10000000000000001, 0.0), (0.20000000000000001, 0.0), (0.30000000000000004, 0.0), (0.40000000000000002, 0.0), (0.5, 0.0), (0.60000000000000009, 0.0), (0.70000000000000007, 0.0), (0.80000000000000004, 0.0), (0.90000000000000002, 0.0), (1.0, 0.0), (0.0, 0.10000000000000001), (0.10000000000000001, 0.10000000000000001), (0.20000000000000001, 0.10000000000000001), (0.30000000000000004, 0.10000000000000001), (0.40000000000000002, 0.10000000000000001), (0.5, 0.10000000000000001), (0.60000000000000009, 0.10000000000000001), (0.70000000000000007, 0.10000000000000001), (0.80000000000000004, 0.10000000000000001), (0.90000000000000002, 0.10000000000000001), (1.0, 0.10000000000000001), (0.0, 0.20000000000000001), (0.10000000000000001, 0.20000000000000001), (0.20000000000000001, 0.20000000000000001), (0.30000000000000004, 0.20000000000000001), (0.40000000000000002, 0.20000000000000001), (0.5, 0.20000000000000001), (0.60000000000000009, 0.20000000000000001), (0.70000000000000007, 0.20000000000000001), (0.80000000000000004, 0.20000000000000001), (0.90000000000000002, 0.20000000000000001), (1.0, 0.20000000000000001), (0.0, 0.30000000000000004), (0.10000000000000001, 0.30000000000000004), (0.20000000000000001, 0.30000000000000004), (0.30000000000000004, 0.30000000000000004), (0.40000000000000002, 0.30000000000000004), (0.5, 0.30000000000000004), (0.60000000000000009, 0.30000000000000004), (0.70000000000000007, 0.30000000000000004), (0.80000000000000004, 0.30000000000000004), (0.90000000000000002, 0.30000000000000004), (1.0, 0.30000000000000004), (0.0, 0.40000000000000002), (0.10000000000000001, 0.40000000000000002), (0.20000000000000001, 0.40000000000000002), (0.30000000000000004, 0.40000000000000002), (0.40000000000000002, 0.40000000000000002), (0.5, 0.40000000000000002), (0.60000000000000009, 0.40000000000000002), (0.70000000000000007, 0.40000000000000002), (0.80000000000000004, 0.40000000000000002), (0.90000000000000002, 0.40000000000000002), (1.0, 0.40000000000000002), (0.0, 0.5), (0.10000000000000001, 0.5), (0.20000000000000001, 0.5), (0.30000000000000004, 0.5), (0.40000000000000002, 0.5), (0.5, 0.5), (0.60000000000000009, 0.5), (0.70000000000000007, 0.5), (0.80000000000000004, 0.5), (0.90000000000000002, 0.5), (1.0, 0.5), (0.0, 0.60000000000000009), (0.10000000000000001, 0.60000000000000009), (0.20000000000000001, 0.60000000000000009), (0.30000000000000004, 0.60000000000000009), (0.40000000000000002, 0.60000000000000009), (0.5, 0.60000000000000009), (0.60000000000000009, 0.60000000000000009), (0.70000000000000007, 0.60000000000000009), (0.80000000000000004, 0.60000000000000009), (0.90000000000000002, 0.60000000000000009), (1.0, 0.60000000000000009), (0.0, 0.70000000000000007), (0.10000000000000001, 0.70000000000000007), (0.20000000000000001, 0.70000000000000007), (0.30000000000000004, 0.70000000000000007), (0.40000000000000002, 0.70000000000000007), (0.5, 0.70000000000000007), (0.60000000000000009, 0.70000000000000007), (0.70000000000000007, 0.70000000000000007), (0.80000000000000004, 0.70000000000000007), (0.90000000000000002, 0.70000000000000007), (1.0, 0.70000000000000007), (0.0, 0.80000000000000004), (0.10000000000000001, 0.80000000000000004), (0.20000000000000001, 0.80000000000000004), (0.30000000000000004, 0.80000000000000004), (0.40000000000000002, 0.80000000000000004), (0.5, 0.80000000000000004), (0.60000000000000009, 0.80000000000000004), (0.70000000000000007, 0.80000000000000004), (0.80000000000000004, 0.80000000000000004), (0.90000000000000002, 0.80000000000000004), (1.0, 0.80000000000000004), (0.0, 0.90000000000000002), (0.10000000000000001, 0.90000000000000002), (0.20000000000000001, 0.90000000000000002), (0.30000000000000004, 0.90000000000000002), (0.40000000000000002, 0.90000000000000002), (0.5, 0.90000000000000002), (0.60000000000000009, 0.90000000000000002), (0.70000000000000007, 0.90000000000000002), (0.80000000000000004, 0.90000000000000002), (0.90000000000000002, 0.90000000000000002), (1.0, 0.90000000000000002), (0.0, 1.0), (0.10000000000000001, 1.0), (0.20000000000000001, 1.0), (0.30000000000000004, 1.0), (0.40000000000000002, 1.0), (0.5, 1.0), (0.60000000000000009, 1.0), (0.70000000000000007, 1.0), (0.80000000000000004, 1.0), (0.90000000000000002, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='reference:skeleton', nodes=[(0, 1, 12, 11), (1, 2, 13, 12), (2, 3, 14, 13), (3, 4, 15, 14), (4, 5, 16, 15), (5, 6, 17, 16), (6, 7, 18, 17), (7, 8, 19, 18), (8, 9, 20, 19), (9, 10, 21, 20), (11, 12, 23, 22), (12, 13, 24, 23), (13, 14, 25, 24), (14, 15, 26, 25), (15, 16, 27, 26), (16, 17, 28, 27), (17, 18, 29, 28), (18, 19, 30, 29), (19, 20, 31, 30), (20, 21, 32, 31), (22, 23, 34, 33), (23, 24, 35, 34), (24, 25, 36, 35), (25, 26, 37, 36), (26, 27, 38, 37), (27, 28, 39, 38), (28, 29, 40, 39), (29, 30, 41, 40), (30, 31, 42, 41), (31, 32, 43, 42), (33, 34, 45, 44), (34, 35, 46, 45), (35, 36, 47, 46), (36, 37, 48, 47), (37, 38, 49, 48), (38, 39, 50, 49), (39, 40, 51, 50), (40, 41, 52, 51), (41, 42, 53, 52), (42, 43, 54, 53), (44, 45, 56, 55), (45, 46, 57, 56), (46, 47, 58, 57), (47, 48, 59, 58), (48, 49, 60, 59), (49, 50, 61, 60), (50, 51, 62, 61), (51, 52, 63, 62), (52, 53, 64, 63), (53, 54, 65, 64), (55, 56, 67, 66), (56, 57, 68, 67), (57, 58, 69, 68), (58, 59, 70, 69), (59, 60, 71, 70), (60, 61, 72, 71), (61, 62, 73, 72), (62, 63, 74, 73), (63, 64, 75, 74), (64, 65, 76, 75), (66, 67, 78, 77), (67, 68, 79, 78), (68, 69, 80, 79), (69, 70, 81, 80), (70, 71, 82, 81), (71, 72, 83, 82), (72, 73, 84, 83), (73, 74, 85, 84), (74, 75, 86, 85), (75, 76, 87, 86), (77, 78, 89, 88), (78, 79, 90, 89), (79, 80, 91, 90), (80, 81, 92, 91), (81, 82, 93, 92), (82, 83, 94, 93), (83, 84, 95, 94), (84, 85, 96, 95), (85, 86, 97, 96), (86, 87, 98, 97), (88, 89, 100, 99), (89, 90, 101, 100), (90, 91, 102, 101), (91, 92, 103, 102), (92, 93, 104, 103), (93, 94, 105, 104), (94, 95, 106, 105), (95, 96, 107, 106), (96, 97, 108, 107), (97, 98, 109, 108), (99, 100, 111, 110), (100, 101, 112, 111), (101, 102, 113, 112), (102, 103, 114, 113), (103, 104, 115, 114), (104, 105, 116, 115), (105, 106, 117, 116), (106, 107, 118, 117), (107, 108, 119, 118), (108, 109, 120, 119)])
Skeleton.PinnedNodes(skeleton='reference:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topleft', nodes=[110], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topright', nodes=[120], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomright', nodes=[10], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='midtop', nodes=[114], exterior=0)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='top', edges=[(120, 119), (119, 118), (118, 117), (117, 116), (116, 115), (115, 114), (114, 113), (113, 112), (112, 111), (111, 110)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='right', edges=[(10, 21), (21, 32), (32, 43), (43, 54), (54, 65), (65, 76), (76, 87), (87, 98), (98, 109), (109, 120)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='left', edges=[(110, 99), (99, 88), (88, 77), (77, 66), (66, 55), (55, 44), (44, 33), (33, 22), (22, 11), (11, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='bottom', edges=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)], exterior=1)
Mesh.New(name='mesh', masterelems=['T6_6', 'Q8_8'], skeleton='reference:skeleton')
Subproblem.New(name='stripe', subproblem=PixelGroupSubProblem(group='stripe'), mesh='reference:skeleton:mesh')
Subproblem.New(name='edges', subproblem=PixelGroupSubProblem(group='edges'), mesh='reference:skeleton:mesh')
Subproblem.Fields(subproblem='reference:skeleton:mesh:edges', defined=['Temperature'], active=['Temperature'], inplane=['Temperature'])
Subproblem.Equations(subproblem='reference:skeleton:mesh:edges', equations=['Heat_Eqn'])
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc<2>', bc=FloatBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ContinuumProfile(function='0'),boundary='top'))
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(3,), (4,), (5,), (6,), (7,), (14,), (15,), (16,), (17,), (18,), (25,), (26,), (27,), (28,), (29,), (36,), (37,), (38,), (39,), (40,), (47,), (48,), (49,), (50,), (51,), (58,), (59,), (60,), (61,), (62,), (69,), (70,), (71,), (72,), (73,), (80,), (81,), (82,), (83,), (84,), (91,), (92,), (93,), (94,), (95,), (102,), (103,), (104,), (105,), (106,), (113,), (114,), (115,), (116,), (117,), (128,), (129,), (130,), (131,), (132,), (133,), (134,), (135,), (136,), (137,), (138,), (139,), (140,), (141,), (142,), (143,), (145,), (157,), (158,), (159,), (160,), (161,), (162,), (163,), (164,), (165,), (166,), (168,), (178,), (179,), (180,), (181,), (182,), (183,), (184,), (185,), (186,), (187,), (189,), (199,), (200,), (201,), (202,), (203,), (204,), (205,), (206,), (207,), (208,), (210,), (220,), (221,), (222,), (223,), (224,), (225,), (226,), (227,), (228,), (229,), (231,), (241,), (242,), (243,), (244,), (245,), (246,), (247,), (248,), (249,), (250,), (252,), (262,), (263,), (264,), (265,), (266,), (267,), (268,), (269,), (270,), (271,), (273,), (283,), (284,), (285,), (286,), (287,), (288,), (289,), (290,), (291,), (292,), (294,), (304,), (305,), (306,), (307,), (308,), (309,), (310,), (311,), (312,), (313,), (315,), (325,), (326,), (327,), (328,), (329,), (330,), (331,), (332,), (333,), (334,), (336,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(0, 0.0, 0.0), (1, 0.0, 0.0), (2, 0.0, 0.0), (8, 0.0, 0.0), (9, 0.0, 0.0), (10, 0.0, 0.0), (11, -1.3396112519805913e-14, 0.0), (12, -1.2618300074155239e-14, 0.0), (13, -1.6993558204405235e-14, 0.0), (19, -9.0675284545164822e-15, 0.0), (20, -1.4649060686744753e-14, 0.0), (21, -1.6546792316903708e-14, 0.0), (22, -2.5535265910112236e-14, 0.0), (23, -2.8729586962133054e-14, 0.0), (24, -3.5127502335598386e-14, 0.0), (30, -2.4400944572947889e-14, 0.0), (31, -2.8097874553000944e-14, 0.0), (32, -3.031719419740823e-14, 0.0), (33, -4.6715951526769284e-14, 0.0), (34, -4.8074028158843383e-14, 0.0), (35, -5.1671753152835807e-14, 0.0), (41, -3.8821999959540206e-14, 0.0), (42, -4.2048613252190317e-14, 0.0), (43, -4.5381953535368222e-14, 0.0), (44, -6.1734833976209198e-14, 0.0), (45, -5.8737467455058546e-14, 0.0), (46, -6.079222912573757e-14, 0.0), (52, -5.1415645817978422e-14, 0.0), (53, -5.1762969609841431e-14, 0.0), (54, -5.6019164189733559e-14, 0.0), (55, -7.7290765658032854e-14, 0.0), (56, -7.7644122650403435e-14, 0.0), (57, -7.6083432310899388e-14, 0.0), (63, -6.4521688866710936e-14, 0.0), (64, -6.6991262581228929e-14, 0.0), (65, -7.0538584969980565e-14, 0.0), (66, -9.8344678488738475e-14, 0.0), (67, -9.5060514745134607e-14, 0.0), (68, -8.7907185117018929e-14, 0.0), (74, -8.2170538206956367e-14, 0.0), (75, -8.1450759936863333e-14, 0.0), (76, -8.2000103123840728e-14, 0.0), (77, -1.1138464535357675e-13, 0.0), (78, -1.0581755441000538e-13, 0.0), (79, -9.8469366563035558e-14, 0.0), (85, -9.4474763220101313e-14, 0.0), (86, -9.5889609239077143e-14, 0.0), (87, -9.6578680285640805e-14, 0.0), (88, -1.3081594415243488e-13, 0.0), (89, -1.3091223499471135e-13, 0.0), (90, -1.173419853942936e-13, 0.0), (96, -1.1717709094174325e-13, 0.0), (97, -1.1757555618227691e-13, 0.0), (98, -1.1239789876501414e-13, 0.0), (99, -1.4363407006405677e-13, 0.0), (100, -1.4659028082222678e-13, 0.0), (101, -1.3684254314176861e-13, 0.0), (107, -1.3044441532886926e-13, 0.0), (108, -1.3263903483685612e-13, 0.0), (109, -1.3148143737434138e-13, 0.0), (110, -1.5627928262036512e-13, 0.0), (111, -1.5627928262036512e-13, 0.0), (112, -1.5627928262036512e-13, 0.0), (118, -1.5627928262036512e-13, 0.0), (119, -1.5627928262036512e-13, 0.0), (120, -1.5627928262036512e-13, 0.0), (121, 0.0, 0.0), (122, -6.8450248627861037e-15, 0.0), (123, -1.2929639121593231e-14, 0.0), (124, -7.1323255825507388e-17, 0.0), (125, 0.0, 0.0), (126, -1.3017984145134884e-14, 0.0), (127, -1.5246785784871133e-14, 0.0), (144, -7.2698966479942295e-15, 0.0), (146, 0.0, 0.0), (147, -9.2579779660577743e-15, 0.0), (148, -9.8814712629224723e-15, 0.0), (149, 0.0, 0.0), (150, -1.0992934123643453e-14, 0.0), (151, -1.7444124527997123e-14, 0.0), (152, -2.1890147790032819e-14, 0.0), (153, -3.0448385519491556e-14, 0.0), (154, -1.6091367038588173e-14, 0.0), (155, -2.442990322848782e-14, 0.0), (156, -3.0895344032718371e-14, 0.0), (167, -1.5255858259792934e-14, 0.0), (169, -1.9441230297355299e-14, 0.0), (170, -2.459332680568344e-14, 0.0), (171, -2.4121623375316388e-14, 0.0), (172, -2.9595067266814436e-14, 0.0), (173, -3.8400930984350068e-14, 0.0), (174, -4.4587737701855037e-14, 0.0), (175, -3.1187239640410683e-14, 0.0), (176, -4.4323906255753203e-14, 0.0), (177, -4.7103928484717207e-14, 0.0), (188, -2.6301166789027624e-14, 0.0), (190, -3.2416914696956984e-14, 0.0), (191, -3.8700305137220951e-14, 0.0), (192, -3.7239762331744895e-14, 0.0), (193, -4.0529155337700391e-14, 0.0), (194, -5.2347742677077745e-14, 0.0), (195, -6.1820673488034839e-14, 0.0), (196, -4.8538337225957219e-14, 0.0), (197, -6.0368573355747387e-14, 0.0), (198, -6.4225836673024065e-14, 0.0), (209, -4.5453894745693368e-14, 0.0), (211, -4.8647263517717643e-14, 0.0), (212, -5.43966472535937e-14, 0.0), (213, -5.0911311295815139e-14, 0.0), (214, -5.7050942254000869e-14, 0.0), (215, -6.8398792390274765e-14, 0.0), (216, -8.0012860944467954e-14, 0.0), (217, -7.5115082120512919e-14, 0.0), (218, -7.1670172138393699e-14, 0.0), (219, -7.7891527415599762e-14, 0.0), (230, -6.0866352630585189e-14, 0.0), (232, -6.1592892482800825e-14, 0.0), (233, -6.62011141389205e-14, 0.0), (234, -6.8103810164803333e-14, 0.0), (235, -7.0930453873609906e-14, 0.0), (236, -8.8716564863242751e-14, 0.0), (237, -9.3100740156881975e-14, 0.0), (238, -9.4756031886878734e-14, 0.0), (239, -7.9770240639031649e-14, 0.0), (240, -8.9844557287417538e-14, 0.0), (251, -7.2355527640171957e-14, 0.0), (253, -7.3369169019133549e-14, 0.0), (254, -7.8207125653782443e-14, 0.0), (255, -7.6859869334154164e-14, 0.0), (256, -7.8402920392297603e-14, 0.0), (257, -9.8251445602087985e-14, 0.0), (258, -1.0653428798427525e-13, 0.0), (259, -1.0501204714797747e-13, 0.0), (260, -9.1393402970695612e-14, 0.0), (261, -1.0405990802332432e-13, 0.0), (272, -8.3968674117473562e-14, 0.0), (274, -8.6741416452048489e-14, 0.0), (275, -9.7759381093421183e-14, 0.0), (276, -8.6503076114415741e-14, 0.0), (277, -9.6364288308827511e-14, 0.0), (278, -1.1436585115122783e-13, 0.0), (279, -1.2505903268708124e-13, 0.0), (280, -1.1860949305019917e-13, 0.0), (281, -1.0338134143817648e-13, 0.0), (282, -1.2268701918407239e-13, 0.0), (293, -1.0560022103439294e-13, 0.0), (295, -1.0664696660286922e-13, 0.0), (296, -1.139166644229642e-13, 0.0), (297, -1.0611623519520215e-13, 0.0), (298, -1.1387546463965169e-13, 0.0), (299, -1.3514120923938104e-13, 0.0), (300, -1.4286835840077792e-13, 0.0), (301, -1.3742230412039837e-13, 0.0), (302, -1.2307467319682785e-13, 0.0), (303, -1.4241755524697254e-13, 0.0), (314, -1.202824224557488e-13, 0.0), (316, -1.1857256038182055e-13, 0.0), (317, -1.322965188444568e-13, 0.0), (318, -1.1879532466557067e-13, 0.0), (319, -1.2873419947828142e-13, 0.0), (320, -1.4657575293356506e-13, 0.0), (321, -1.5627928262036512e-13, 0.0), (322, -1.5113760022552244e-13, 0.0), (323, -1.4942550759774677e-13, 0.0), (324, -1.5627928262036512e-13, 0.0), (335, -1.4172464464322004e-13, 0.0), (337, -1.3538702276389469e-13, 0.0), (338, -1.5627928262036512e-13, 0.0), (339, -1.4191768938508135e-13, 0.0), (340, -1.5627928262036512e-13, 0.0)])

# -*- python -*-
# Demonstrator for a client of the socket thing.

import errno, getopt, os, socket, sys, time

sock_buf_size = 80
connect_attempt_limit = 1000000 # Some implausibly large number.

try:
    (opts, extra) = getopt.getopt(sys.argv[1:],"h:p:")
except getopt.error:
    print >> sys.stderr, "Usage: %s -h <remote host name> -p <remote port>"

for o in opts:
    if o[0]=="-p":
        farport = int(o[1])
    if o[0]=="-h":
        farhost = o[1]


# Return a socket connected to the server at farhost:farport via an ssh tunnel.
def getsocket(host, port):
    # Counter, in case of persistent connection refusals for some
    # other reason.
    connects = 0
    while connects < connect_attempt_limit:
        try:
            connects += 1
            actual = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            actual.connect( (host, port) )
        except socket.error, e:
            if e[0]==errno.ECONNREFUSED: # "Connection refused"
                actual.close()
                time.sleep(0.1)
            else:
                actual.close()
                raise
        else:
            break
    else:
        raise "Connection failure after %d attempts." % connects

    return actual

print "before getting socket"
sock = getsocket(farhost, farport)
print "after getting sockets"
sock.send("A.bc.d.efg.h\n")
print "after sock.send"
done = None # The only two English "Xon" words prounounced "Xun".
while not done:
    try:
        print "before sock.recv"
        r = sock.recv(sock_buf_size)
        print "after sock.recv"
    except KeyboardInterrupt:
        print "Got keyboard interrupt."
        sock.close()
        break
        
    if not r:
        break
    sys.stdout.write(r)

